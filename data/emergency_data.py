class EmergencyData:
    def __init__(self):
        # База данных лекарств и дозировок
        self.drugs = {
            "адреналин": {
                "dose_per_kg": 0.01,  # мг/кг
                "max_dose": 1.0,  # мг
                "route": "в/в, в/м",
                "indication": "Анафилактический шок, остановка сердца",
                "contraindications": "Выраженная артериальная гипертензия"
            },
            "атропин": {
                "dose_per_kg": 0.02,  # мг/кг
                "max_dose": 2.0,  # мг
                "route": "в/в, в/м",
                "indication": "Отравление ФОС, брадикардия",
                "contraindications": "Глаукома, тахикардия"
            },
            "преднизолон": {
                "dose_per_kg": 1.0,  # мг/кг
                "max_dose": 90.0,  # мг
                "route": "в/в",
                "indication": "Анафилаксия, астматический статус",
                "contraindications": "Системные инфекции"
            },
            "дексаметазон": {
                "dose_per_kg": 0.15,  # мг/кг
                "max_dose": 10.0,  # мг
                "route": "в/в, в/м",
                "indication": "Отек мозга, аллергические реакции",
                "contraindications": "Системные грибковые инфекции"
            },
            "диазепам": {
                "dose_per_kg": 0.1,  # мг/кг
                "max_dose": 10.0,  # мг
                "route": "в/в медленно",
                "indication": "Судороги, эпилептический статус",
                "contraindications": "Дыхательная недостаточность"
            },
            "морфин": {
                "dose_per_kg": 0.1,  # мг/кг
                "max_dose": 10.0,  # мг
                "route": "в/в, в/м, п/к",
                "indication": "Сильная боль",
                "contraindications": "Дыхательная недостаточность, кома"
            },
            "налоксон": {
                "dose_per_kg": 0.01,  # мг/кг
                "max_dose": 2.0,  # мг
                "route": "в/в, в/м, в/н",
                "indication": "Передозировка опиатов",
                "contraindications": "Гиперчувствительность"
            },
            "фуросемид": {
                "dose_per_kg": 1.0,  # мг/кг
                "max_dose": 80.0,  # мг
                "route": "в/в",
                "indication": "Отек легких, гипертонический криз",
                "contraindications": "Анурия, гипонатриемия"
            },
            "нитроглицерин": {
                "dose_per_kg": 0.0005,  # мг/кг
                "max_dose": 0.5,  # мг
                "route": "сублингвально",
                "indication": "Стенокардия, инфаркт миокарда",
                "contraindications": "Гипотония, прием силденафила"
            },
            "лидокаин": {
                "dose_per_kg": 1.5,  # мг/кг
                "max_dose": 100.0,  # мг
                "route": "в/в струйно",
                "indication": "Желудочковые аритмии",
                "contraindications": "AV-блокада, синдром слабости синусного узла"
            },
            "амиодарон": {
                "dose_per_kg": 5.0,  # мг/кг
                "max_dose": 300.0,  # мг
                "route": "в/в медленно",
                "indication": "Фибрилляция желудочков, желудочковая тахикардия",
                "contraindications": "Синусовая брадикардия, AV-блокада"
            },
            "допамин": {
                "dose_per_kg": 5.0,  # мкг/кг/мин
                "max_dose": 20.0,  # мкг/кг/мин
                "route": "в/в капельно",
                "indication": "Кардиогенный шок, артериальная гипотензия",
                "contraindications": "Феохромоцитома, тахиаритмии"
            },
            "анальгин": {
                "dose_per_kg": 10.0,  # мг/кг
                "max_dose": 1000.0,  # мг
                "route": "в/в, в/м",
                "indication": "Болевой синдром, гипертермия",
                "contraindications": "Агранулоцитоз, бронхиальная астма"
            },
            "димедрол": {
                "dose_per_kg": 1.0,  # мг/кг
                "max_dose": 50.0,  # мг
                "route": "в/в, в/м",
                "indication": "Аллергические реакции, седация",
                "contraindications": "Глаукома, гипертрофия предстательной железы"
            },
            "папаверин": {
                "dose_per_kg": 1.0,  # мг/кг
                "max_dose": 80.0,  # мг
                "route": "в/в, в/м",
                "indication": "Спазм гладкой мускулатуры",
                "contraindications": "AV-блокада, глаукома"
            },
            "кордарон": {
                "dose_per_kg": 5.0,  # мг/кг
                "max_dose": 300.0,  # мг
                "route": "в/в медленно",
                "indication": "Пароксизмальные тахикардии, фибрилляция предсердий",
                "contraindications": "Синусовая брадикардия, AV-блокада II-III степени"
            },
            "эуфиллин": {
                "dose_per_kg": 4.0,  # мг/кг
                "max_dose": 240.0,  # мг
                "route": "в/в медленно",
                "indication": "Бронхоспазм, отек легких",
                "contraindications": "Эпилепсия, тахиаритмии"
            },
            "магния сульфат": {
                "dose_per_kg": 25.0,  # мг/кг
                "max_dose": 2000.0,  # мг
                "route": "в/в медленно",
                "indication": "Эклампсия, гипомагниемия, аритмии",
                "contraindications": "Почечная недостаточность, AV-блокада"
            },
            "верапамил": {
                "dose_per_kg": 0.1,  # мг/кг
                "max_dose": 10.0,  # мг
                "route": "в/в медленно",
                "indication": "Наджелудочковые тахикардии",
                "contraindications": "AV-блокада, синдром WPW"
            },
            "гидрокортизон": {
                "dose_per_kg": 4.0,  # мг/кг
                "max_dose": 300.0,  # мг
                "route": "в/в, в/м",
                "indication": "Надпочечниковая недостаточность, анафилаксия",
                "contraindications": "Системные инфекции без антибиотикотерапии"
            },
            "промедол": {
                "dose_per_kg": 1.0,  # мг/кг
                "max_dose": 80.0,  # мг
                "route": "в/м, п/к",
                "indication": "Сильная боль, премедикация",
                "contraindications": "Дыхательная недостаточность, черепно-мозговая травма"
            },
            "кеторол": {
                "dose_per_kg": 0.5,  # мг/кг
                "max_dose": 30.0,  # мг
                "route": "в/в, в/м",
                "indication": "Болевой синдром средней интенсивности",
                "contraindications": "Язвенная болезнь, почечная недостаточность"
            },
            "глюкоза": {
                "dose_per_kg": 0.5,  # г/кг
                "max_dose": 50.0,  # г
                "route": "в/в струйно 40%",
                "indication": "Гипогликемия, гипогликемическая кома",
                "contraindications": "Гипергликемия, отек мозга"
            }
        }
        
        # База данных ядов и противоядий
        self.poisons = {
            "мышьяк": {
                "symptoms": "Металлический привкус, рвота, диарея, судороги",
                "antidote": "Унитиол 5% 5-10 мл в/м каждые 6 часов",
                "first_aid": "Промывание желудка, активированный уголь",
                "danger": "Крайне высокая - смертельная доза 0.1-0.2 г"
            },
            "угарный газ": {
                "symptoms": "Головная боль, головокружение, тошнота, потеря сознания",
                "antidote": "100% кислород, гипербарическая оксигенация",
                "first_aid": "Вынести на свежий воздух, ИВЛ при необходимости",
                "danger": "Высокая - COHb >25% опасно для жизни"
            },
            "метанол": {
                "symptoms": "Опьянение, нарушение зрения, метаболический ацидоз",
                "antidote": "Этанол 96° внутрь или в/в, фолиевая кислота",
                "first_aid": "Промывание желудка, не вызывать рвоту",
                "danger": "Высокая - слепота от 10 мл, смерть от 30-100 мл"
            },
            "фос": {
                "symptoms": "Миоз, гиперсаливация, бронхоспазм, судороги",
                "antidote": "Атропин 2-5 мг в/в каждые 5-10 мин, пралидоксим",
                "first_aid": "Снять загрязненную одежду, промыть кожу",
                "danger": "Крайне высокая - поражение НС"
            },
            "цианиды": {
                "symptoms": "Запах горького миндаля, розовая кожа, судороги",
                "antidote": "Натрия нитрит 3% 10 мл в/в + натрия тиосульфат 30% 50 мл в/в",
                "first_aid": "ИВЛ 100% кислородом, в/в инфузия",
                "danger": "Крайне высокая - быстрая смерть"
            },
            "этиленгликоль": {
                "symptoms": "Опьянение, тошнота, судороги, кома, анурия",
                "antidote": "Этанол 96° или фомепизол, гемодиализ",
                "first_aid": "Промывание желудка, форсированный диурез",
                "danger": "Высокая - поражение почек, смерть от 100 мл"
            },
            "дихлорэтан": {
                "symptoms": "Сладковатый запах, рвота, диарея, поражение печени",
                "antidote": "Специфического нет, симптоматическая терапия",
                "first_aid": "Промывание желудка, активированный уголь, слабительное",
                "danger": "Крайне высокая - смерть от 10-20 мл"
            },
            "грибы": {
                "symptoms": "Через 6-12 часов: рвота, диарея, обезвоживание, желтуха",
                "antidote": "Специфического нет, гемодиализ, силибинин",
                "first_aid": "Промывание желудка, солевые слабительные",
                "danger": "Высокая - бледная поганка смертельна в 90% случаев"
            },
            "уксусная кислота": {
                "symptoms": "Ожоги полости рта и пищевода, рвота с кровью, шок",
                "antidote": "Специфического нет, холодное молоко, масло",
                "first_aid": "НЕ промывать желудок! Холодное питье малыми глотками",
                "danger": "Высокая - перфорация пищевода, стеноз"
            },
            "аммиак": {
                "symptoms": "Раздражение глаз и дыхательных путей, отек легких",
                "antidote": "Специфического нет, кислородотерапия",
                "first_aid": "Промыть глаза водой, свежий воздух, покой",
                "danger": "Средняя - при высоких концентрациях отек легких"
            },
            "хлор": {
                "symptoms": "Резь в глазах, кашель, одышка, отек легких",
                "antidote": "Специфического нет, ингаляции соды 2%",
                "first_aid": "Свежий воздух, промыть глаза и кожу водой",
                "danger": "Высокая - токсический отек легких"
            },
            "ртуть": {
                "symptoms": "Металлический привкус, стоматит, тремор, нефрит",
                "antidote": "Унитиол 5% 5 мл в/м, пеницилламин",
                "first_aid": "Активированный уголь, слабительное, обильное питье",
                "danger": "Высокая - хроническое отравление"
            },
            "свинец": {
                "symptoms": "Кишечные колики, анемия, энцефалопатия, нефропатия",
                "antidote": "Унитиол 5% 5 мл в/м, ЭДТА кальций-динатриевая соль",
                "first_aid": "Промывание желудка, слабительное, молоко",
                "danger": "Высокая - хроническое поражение НС и почек"
            },
            "барбитураты": {
                "symptoms": "Угнетение сознания, дыхания, гипотермия, кома",
                "antidote": "Специфического нет, форсированный диурез, гемосорбция",
                "first_aid": "ИВЛ, согревание, в/в инфузия",
                "danger": "Высокая - остановка дыхания"
            },
            "салицилаты": {
                "symptoms": "Звон в ушах, тошнота, гипертермия, метаболический ацидоз",
                "antidote": "Натрия гидрокарбонат 4% в/в, гемодиализ",
                "first_aid": "Промывание желудка, активированный уголь",
                "danger": "Средняя - при передозировке аспирина"
            },
            "парацетамол": {
                "symptoms": "Тошнота, рвота, через 24-48 ч гепатонекроз",
                "antidote": "Ацетилцистеин (АЦЦ) в/в в первые 8-16 часов",
                "first_aid": "Промывание желудка, активированный уголь",
                "danger": "Высокая - поражение печени, смерть через 3-5 дней"
            },
            "кислоты": {
                "symptoms": "Ожоги полости рта, пищевода, желудка, болевой шок",
                "antidote": "Специфического нет, щелочи противопоказаны!",
                "first_aid": "НЕ промывать желудок! Холодное питье, молоко, масло",
                "danger": "Крайне высокая - перфорация, стеноз пищевода"
            },
            "щелочи": {
                "symptoms": "Ожоги слизистых, отек гортани, удушье",
                "antidote": "Специфического нет, кислоты противопоказаны!",
                "first_aid": "НЕ промывать желудок! Холодная вода, молоко",
                "danger": "Крайне высокая - перфорация, асфиксия"
            }
        }
        
        # Классы пожаров и способы тушения  
        self.fire_classes = {
            "a": {
                "description": "Твердые горючие вещества (дерево, бумага, ткань)",
                "extinguishing": "Вода, пена, порошок ABC",
                "danger": "Задымление, обрушение конструкций",
                "tactics": "Охлаждение водой, создание водяной завесы"
            },
            "b": {
                "description": "Жидкие горючие вещества (бензин, масла, растворители)",
                "extinguishing": "Пена, порошок, углекислота, НЕ ВОДА!",
                "danger": "Взрыв паров, растекание жидкости",
                "tactics": "Изоляция от воздуха, охлаждение емкостей"
            },
            "c": {
                "description": "Газообразные вещества (пропан, метан, водород)",
                "extinguishing": "Порошок, перекрытие подачи газа",
                "danger": "Взрыв, токсичные продукты горения",
                "tactics": "Первоочередное перекрытие источника газа"
            },
            "d": {
                "description": "Металлы (магний, алюминий, натрий, калий)",
                "extinguishing": "Специальные порошки, песок, НЕ ВОДА!",
                "danger": "Взрыв при контакте с водой",
                "tactics": "Засыпка песком, специальными составами"
            },
            "e": {
                "description": "Электроустановки под напряжением",
                "extinguishing": "Углекислота, порошок (после обесточивания)",
                "danger": "Поражение электротоком",
                "tactics": "Первоочередное обесточивание"
            }
        }
        
        # Основные статьи УК РФ
        self.criminal_code = {
            "105": {
                "title": "Убийство",
                "punishment": "6-15 лет лишения свободы",
                "description": "Умышленное причинение смерти другому человеку"
            },
            "158": {
                "title": "Кража",
                "punishment": "до 2 лет лишения свободы или штраф",
                "description": "Тайное хищение чужого имущества"
            },
            "161": {
                "title": "Грабеж", 
                "punishment": "до 4 лет лишения свободы",
                "description": "Открытое хищение чужого имущества"
            },
            "162": {
                "title": "Разбой",
                "punishment": "3-8 лет лишения свободы", 
                "description": "Нападение с целью хищения имущества с применением насилия"
            },
            "228": {
                "title": "Незаконные приобретение, хранение наркотических средств",
                "punishment": "штраф до 40 тыс. руб. или до 3 лет лишения свободы",
                "description": "Операции с наркотиками без цели сбыта"
            },
            "264": {
                "title": "Нарушение ПДД, повлекшее по неосторожности смерть",
                "punishment": "принудительные работы или лишение свободы до 5 лет",
                "description": "ДТП с летальным исходом"
            },
            "111": {
                "title": "Умышленное причинение тяжкого вреда здоровью",
                "punishment": "2-8 лет лишения свободы",
                "description": "Причинение вреда, опасного для жизни или повлекшего потерю органа"
            },
            "112": {
                "title": "Умышленное причинение средней тяжести вреда здоровью",
                "punishment": "до 3 лет лишения свободы",
                "description": "Длительное расстройство здоровья или значительная стойкая утрата трудоспособности"
            },
            "115": {
                "title": "Умышленное причинение легкого вреда здоровью",
                "punishment": "штраф или обязательные работы",
                "description": "Кратковременное расстройство здоровья или незначительная стойкая утрата трудоспособности"
            },
            "116": {
                "title": "Побои",
                "punishment": "штраф или обязательные работы",
                "description": "Нанесение побоев или совершение иных насильственных действий"
            },
            "117": {
                "title": "Истязание",
                "punishment": "до 3 лет лишения свободы",
                "description": "Причинение физических или психических страданий"
            },
            "119": {
                "title": "Угроза убийством или причинением тяжкого вреда здоровью",
                "punishment": "до 2 лет лишения свободы",
                "description": "Угроза убийством, если имелись основания опасаться её осуществления"
            },
            "125": {
                "title": "Оставление в опасности",
                "punishment": "до 1 года лишения свободы",
                "description": "Заведомое оставление без помощи лица, находящегося в опасном состоянии"
            },
            "130": {
                "title": "Оскорбление",
                "punishment": "штраф или обязательные работы",
                "description": "Унижение чести и достоинства другого лица"
            },
            "159": {
                "title": "Мошенничество",
                "punishment": "до 2 лет лишения свободы или штраф",
                "description": "Хищение имущества путем обмана или злоупотребления доверием"
            },
            "160": {
                "title": "Присвоение или растрата",
                "punishment": "до 2 лет лишения свободы",
                "description": "Хищение чужого имущества, вверенного виновному"
            },
            "163": {
                "title": "Вымогательство", 
                "punishment": "до 4 лет лишения свободы",
                "description": "Требование передачи имущества под угрозой применения насилия"
            },
            "166": {
                "title": "Неправомерное завладение автомобилем",
                "punishment": "до 5 лет лишения свободы",
                "description": "Угон транспортного средства без цели хищения"
            },
            "167": {
                "title": "Умышленные уничтожение или повреждение имущества",
                "punishment": "до 2 лет лишения свободы",
                "description": "Уничтожение или повреждение чужого имущества"
            },
            "213": {
                "title": "Хулиганство",
                "punishment": "до 5 лет лишения свободы",
                "description": "Грубое нарушение общественного порядка"
            },
            "222": {
                "title": "Незаконные приобретение, хранение оружия",
                "punishment": "до 4 лет лишения свободы",
                "description": "Операции с огнестрельным оружием без лицензии"
            },
            "223": {
                "title": "Незаконное изготовление оружия",
                "punishment": "до 4 лет лишения свободы",
                "description": "Изготовление, переделка или ремонт огнестрельного оружия"
            },
            "228.1": {
                "title": "Незаконные производство, сбыт наркотических средств",
                "punishment": "4-8 лет лишения свободы",
                "description": "Операции с наркотиками в целях сбыта"
            },
            "264.1": {
                "title": "Нарушение ПДД лицом, подвергнутым административному наказанию",
                "punishment": "штраф или лишение свободы до 2 лет",
                "description": "Повторное нарушение ПДД в состоянии опьянения"
            },
            "318": {
                "title": "Применение насилия в отношении представителя власти",
                "punishment": "до 5 лет лишения свободы",
                "description": "Применение насилия, не опасного для жизни или здоровья"
            },
            "319": {
                "title": "Оскорбление представителя власти",
                "punishment": "штраф до 40 тыс. руб. или обязательные работы",
                "description": "Публичное оскорбление при исполнении должностных обязанностей"
            },
            "207": {
                "title": "Заведомо ложное сообщение об акте терроризма",
                "punishment": "штраф до 200 тыс. руб. или лишение свободы до 3 лет",
                "description": "Сообщение о готовящемся взрыве, поджоге или террористическом акте"
            },
            "282": {
                "title": "Возбуждение ненависти либо вражды",
                "punishment": "штраф до 300 тыс. руб. или лишение свободы до 4 лет",
                "description": "Действия, направленные на возбуждение ненависти по признакам расы, национальности, религии"
            },
            "280": {
                "title": "Публичные призывы к осуществлению экстремистской деятельности",
                "punishment": "штраф до 300 тыс. руб. или лишение свободы до 4 лет",
                "description": "Публичные призывы к экстремистской деятельности"
            }
        }

        # Статьи КоАП РФ
        self.admin_code = {
            "20.1": {
                "title": "Мелкое хулиганство",
                "punishment": "штраф 500-1000 руб. или арест до 15 суток",
                "description": "Нарушение общественного порядка, выражающее явное неуважение к обществу"
            },
            "20.20": {
                "title": "Потребление наркотических средств",
                "punishment": "штраф 4000-5000 руб. или арест до 15 суток",
                "description": "Потребление наркотических средств без назначения врача"
            },
            "20.21": {
                "title": "Появление в общественных местах в состоянии опьянения",
                "punishment": "штраф 500-1500 руб. или арест до 15 суток",
                "description": "Появление в состоянии опьянения, оскорбляющем человеческое достоинство"
            },
            "12.8": {
                "title": "Управление ТС в состоянии опьянения",
                "punishment": "штраф 30000 руб. + лишение прав на 1.5-2 года",
                "description": "Управление транспортным средством в состоянии опьянения"
            },
            "12.26": {
                "title": "Невыполнение требования о прохождении медосвидетельствования",
                "punishment": "штраф 30000 руб. + лишение прав на 1.5-2 года",
                "description": "Отказ от прохождения медицинского освидетельствования"
            },
            "12.15": {
                "title": "Нарушение правил расположения ТС на проезжей части",
                "punishment": "штраф 1500 руб.",
                "description": "Выезд в нарушение ПДД на полосу, предназначенную для встречного движения"
            },
            "12.16": {
                "title": "Несоблюдение требований дорожных знаков или разметки",
                "punishment": "предупреждение или штраф 500 руб.",
                "description": "Несоблюдение требований дорожных знаков или разметки"
            },
            "19.3": {
                "title": "Неповиновение законному распоряжению сотрудника полиции",
                "punishment": "штраф 500-1000 руб. или арест до 15 суток",
                "description": "Неповиновение законному распоряжению или требованию сотрудника полиции"
            },
            "6.1": {
                "title": "Сокрытие информации об обстоятельствах, создающих опасность",
                "punishment": "штраф на граждан 1500-2000 руб.",
                "description": "Сокрытие или искажение информации о событиях, фактах или явлениях, создающих опасность"
            },
            "7.17": {
                "title": "Уничтожение или повреждение чужого имущества",
                "punishment": "штраф 300-500 руб.",
                "description": "Умышленное уничтожение или повреждение чужого имущества, если эти действия не повлекли причинение значительного ущерба"
            },
            "20.25": {
                "title": "Уклонение от исполнения административного наказания",
                "punishment": "штраф в двукратном размере либо арест до 15 суток",
                "description": "Уклонение от исполнения административного наказания"
            }
        }

        # Экстренные контакты
        self.emergency_contacts = {
            "112": "Единая служба экстренных вызовов",
            "101": "Пожарная служба и спасатели",
            "102": "Полиция", 
            "103": "Скорая медицинская помощь",
            "104": "Аварийная служба газа",
            "8-800-2000-112": "МЧС России (круглосуточно)",
            "88002222911": "Детский телефон доверия",
            "051": "Служба экстренного вызова МВД (со стационарного)",
            "001": "Пожарная служба (со стационарного)",
            "002": "Милиция (со стационарного)",
            "003": "Скорая помощь (со стационарного)"
        }

    def calculate_dose(self, drug_name, weight):
        """Расчет дозировки лекарства по весу пациента"""
        # Поиск препарата без учета регистра
        found_drug_key = None
        for drug_key in self.drugs:
            if drug_key.lower() == drug_name.lower():
                found_drug_key = drug_key
                break
        
        if not found_drug_key:
            return f"ℹ️ **Лекарство '{drug_name}' не найдено в базе данных.**\n\n💡 **Используйте:** `/dose [название] [вес]` для получения дозировки"
        
        drug = self.drugs[found_drug_key]
            
        calculated_dose = drug["dose_per_kg"] * weight
        
        # Проверка максимальной дозы
        if calculated_dose > drug["max_dose"]:
            calculated_dose = drug["max_dose"]
            dose_warning = f"⚠️ **ВНИМАНИЕ**: Доза ограничена максимально допустимой!"
        else:
            dose_warning = ""
            
        dose_info = f"""
**Расчетная доза**: {calculated_dose:.2f} мг
**Путь введения**: {drug['route']}
**Показания**: {drug['indication']}
**Противопоказания**: {drug['contraindications']}

{dose_warning}

⚠️ **Внимание**: Данная информация носит справочный характер. Перед применением обязательно консультируйтесь с врачом!
        """
        
        return dose_info.strip()

    def get_poison_info(self, poison_name):
        """Получение информации о яде и противоядии"""
        # Поиск яда без учета регистра
        found_poison_key = None
        for poison_key in self.poisons:
            if poison_key.lower() == poison_name.lower():
                found_poison_key = poison_key
                break
        
        if not found_poison_key:
            return f"ℹ️ **Яд '{poison_name}' не найден в базе данных.**\n\n💡 **Используйте:** `/poison [название]` для получения информации"
        
        poison = self.poisons[found_poison_key]
            
        poison_info = f"""
**Симптомы отравления**:
{poison['symptoms']}

**Противоядие**:
{poison['antidote']}

**Первая помощь**:
{poison['first_aid']}

**⚠️ Степень опасности**:
{poison['danger']}

🚨 **При подозрении на отравление немедленно вызывайте скорую помощь: 103**
        """
        
        return poison_info.strip()

    def get_fire_class_info(self, fire_class):
        """Получение информации о классе пожара"""
        fire_class = fire_class.lower()
        if fire_class == "электро":
            fire_class = "e"
            
        # Поиск класса пожара без учета регистра
        found_fire_key = None
        for fire_key in self.fire_classes:
            if fire_key.lower() == fire_class.lower():
                found_fire_key = fire_key
                break
        
        if not found_fire_key:
            return f"ℹ️ **Класс пожара '{fire_class}' не найден.**\n\n💡 **Доступные классы:** A, B, C, D, E"
        
        fire = self.fire_classes[found_fire_key]
            
        fire_info = f"""
**Описание**:
{fire['description']}

**Средства тушения**:
{fire['extinguishing']}

**Опасности**:
{fire['danger']}

**Тактика тушения**:
{fire['tactics']}

🚨 **При обнаружении пожара звоните: 101**
        """
        
        return fire_info.strip()

    def get_criminal_article(self, article_number):
        """Получение информации о статье УК РФ"""
        if article_number in self.criminal_code:
            article = self.criminal_code[article_number]
            return f"⚖️ **Статья {article_number} УК РФ: {article['title']}**\n\n**Описание:** {article['description']}\n\n**Наказание:** {article['punishment']}\n\n**Примечание:** Данная информация носит справочный характер."
        return f"ℹ️ **Статья {article_number} УК РФ не найдена.**\n\n💡 **Используйте:** `/law [номер]` для поиска"

    def get_admin_article(self, article_number):
        """Получение информации о статье КоАП РФ"""
        if article_number in self.admin_code:
            article = self.admin_code[article_number]
            return f"📋 **Статья {article_number} КоАП РФ: {article['title']}**\n\n**Описание:** {article['description']}\n\n**Наказание:** {article['punishment']}\n\n**Примечание:** Данная информация носит справочный характер."
        return f"ℹ️ **Статья {article_number} КоАП РФ не найдена.**\n\n💡 **Используйте:** `/admin [номер]` для поиска"

    def get_all_fire_classes(self):
        """Получение информации о всех классах пожаров"""
        result = "🔥 **Классы пожаров**:\n\n"
        
        for class_name, info in self.fire_classes.items():
            result += f"**Класс {class_name.upper()}**: {info['description']}\n"
            result += f"Тушение: {info['extinguishing']}\n\n"
            
        return result.strip()

    def get_emergency_contacts(self):
        """Получение списка экстренных контактов"""
        result = "📞 **Экстренные службы**:\n\n"
        
        for number, service in self.emergency_contacts.items():
            result += f"**{number}** - {service}\n"
            
        result += "\n🌍 **112** работает даже без SIM-карты и при заблокированном телефоне!"
        
        return result
    
    def get_rescue_protocols(self):
        """Получение протоколов спасательных операций"""
        return """🔍 **Протоколы поисково-спасательных операций:**

**1. Поиск пропавших людей:**
• Сбор информации о пропавшем
• Определение района поиска
• Организация поисковых групп
• Использование служебных собак

**2. Спасение на воде:**
• Оценка ситуации с безопасного расстояния
• Использование спасательных средств
• Применение техники буксировки

**3. Горно-спасательные работы:**
• Оценка устойчивости склона
• Организация страховки
• Эвакуация по веревочным системам

**4. Спасение при ДТП:**
• Обеспечение безопасности места происшествия
• Деблокирование пострадавших
• Первая медицинская помощь"""

    def get_survival_times(self):
        """Получение времени выживания в различных условиях"""
        return """⏱️ **Время выживания человека:**

**Без воздуха:**
• В воде: 2-3 минуты
• В завале: 15-30 минут

**Без воды:**
• В тепле: 3-5 дней
• В холоде: 7-10 дней

**Без еды:**
• При наличии воды: 30-40 дней

**В холодной воде:**
• 0°C: 15-30 минут
• 10°C: 1-2 часа
• 20°C: 12-24 часа

**При переохлаждении:**
• Критическая температура тела: 32°C
• Время до потери сознания: 30-60 минут

⚠️ **Эти данные приблизительные и зависят от множества факторов!**"""



    def get_resuscitation_algorithm(self):
        """Алгоритм сердечно-легочной реанимации"""
        algorithm = """
🫀 **Алгоритм СЛР (сердечно-легочная реанимация)**:

**1. Оценка сознания**:
• Окликнуть пострадавшего
• Потрясти за плечи
• Проверить реакцию зрачков на свет

**2. Вызов помощи**:
• Вызвать скорую: 103
• Попросить принести дефибриллятор (AED)

**3. Проверка дыхания**:
• Запрокинуть голову, приподнять подбородок
• Посмотреть, послушать, почувствовать дыхание (10 сек)

**4. Непрямой массаж сердца**:
• Положение рук: центр грудной клетки, между сосками
• Глубина: 5-6 см
• Частота: 100-120 в минуту
• Соотношение 30:2 (компрессии:вдохи)

**5. ИВЛ "рот в рот"**:
• Запрокинуть голову, поднять подбородок
• Зажать нос, плотно обхватить рот
• 2 вдоха по 1 секунде каждый

**⚠️ НЕ ОСТАНАВЛИВАТЬСЯ до прибытия скорой!**

🎯 **Критерии эффективности**:
• Розовеет кожа и слизистые
• Появляется пульс на сонной артерии
• Восстанавливается самостоятельное дыхание
        """
        
        return algorithm.strip()

    def get_all_criminal_articles(self):
        """Получение списка всех статей УК РФ"""
        result = "⚖️ **Основные статьи УК РФ:**\n\n"
        for article_num, article in self.criminal_code.items():
            result += f"**Ст. {article_num}** - {article['title']}\n"
        result += "\n💡 **Используйте:** `/law [номер статьи]` для подробной информации"
        return result

    def get_all_admin_articles(self):
        """Получение списка всех статей КоАП РФ"""
        result = "📋 **Основные статьи КоАП РФ:**\n\n"
        for article_num, article in self.admin_code.items():
            result += f"**Ст. {article_num}** - {article['title']}\n"
        result += "\n💡 **Используйте:** `/admin [номер статьи]` для подробной информации"
        return result

    def get_all_drugs(self):
        """Получение списка всех доступных лекарств"""
        result = "💊 **Доступные лекарства для расчета дозировок:**\n\n"
        for drug_name, drug_info in self.drugs.items():
            result += f"• **{drug_name.title()}** - {drug_info['indication']}\n"
        result += "\n💡 **Используйте:** `/dose [лекарство] [вес]` для расчета дозировки"
        return result

    def get_all_poisons(self):
        """Получение списка всех ядов"""
        result = "☠️ **Доступная информация о ядах и противоядиях:**\n\n"
        for poison_name, poison_info in self.poisons.items():
            result += f"• **{poison_name.title()}** - {poison_info['danger']}\n"
        result += "\n💡 **Используйте:** `/poison [название]` для получения информации о противоядии"
        return result

    def search_in_database(self, query):
        """Поиск по ключевым словам во всей базе данных"""
        results = []
        query_lower = query.lower()
        
        # Поиск в лекарствах
        for drug_name, drug_info in self.drugs.items():
            if (query_lower in drug_name.lower() or 
                query_lower in drug_info['indication'].lower()):
                results.append({
                    'type': 'drug',
                    'name': drug_name,
                    'info': f"💊 **{drug_name.title()}** - {drug_info['indication']}\n`/dose {drug_name} [вес]`"
                })
        
        # Поиск в ядах
        for poison_name, poison_info in self.poisons.items():
            if (query_lower in poison_name.lower() or 
                query_lower in poison_info['symptoms'].lower()):
                results.append({
                    'type': 'poison',
                    'name': poison_name,
                    'info': f"☠️ **{poison_name.title()}** - {poison_info['danger']}\n`/poison {poison_name}`"
                })
        
        # Поиск в УК РФ
        for article_num, article in self.criminal_code.items():
            if (query_lower in article['title'].lower() or 
                query_lower in article['description'].lower()):
                results.append({
                    'type': 'criminal',
                    'name': f"Ст. {article_num}",
                    'info': f"⚖️ **Ст. {article_num}** - {article['title']}\n`/law {article_num}`"
                })
        
        # Поиск в КоАП РФ
        for article_num, article in self.admin_code.items():
            if (query_lower in article['title'].lower() or 
                query_lower in article['description'].lower()):
                results.append({
                    'type': 'admin',
                    'name': f"Ст. {article_num}",
                    'info': f"📋 **Ст. {article_num}** - {article['title']}\n`/admin {article_num}`"
                })
        
        # Поиск в классах пожаров
        for fire_class, fire_info in self.fire_classes.items():
            if (query_lower in fire_info['description'].lower() or 
                query_lower in fire_info['extinguishing'].lower()):
                results.append({
                    'type': 'fire',
                    'name': f"Класс {fire_class.upper()}",
                    'info': f"🔥 **Класс {fire_class.upper()}** - {fire_info['description']}\n`/fire {fire_class.upper()}`"
                })
        
        return results

    def format_search_results(self, results, query):
        """Форматирование результатов поиска"""
        if not results:
            return f"🔍 **Результаты поиска по запросу '{query}':**\n\nℹ️ Ничего не найдено.\n\n💡 Попробуйте другие ключевые слова или используйте конкретные команды."
        
        formatted = f"🔍 **Результаты поиска по запросу '{query}':**\n\n"
        
        # Группировка по типам
        types_order = ['drug', 'poison', 'criminal', 'admin', 'fire']
        type_names = {
            'drug': '💊 Лекарства:',
            'poison': '☠️ Яды и противоядия:',
            'criminal': '⚖️ УК РФ:',
            'admin': '📋 КоАП РФ:',
            'fire': '🔥 Классы пожаров:'
        }
        
        for result_type in types_order:
            type_results = [r for r in results if r['type'] == result_type]
            if type_results:
                formatted += f"\n**{type_names[result_type]}**\n"
                for result in type_results[:3]:  # Максимум 3 результата каждого типа
                    formatted += f"{result['info']}\n\n"
        
        if len(results) > 15:
            formatted += f"**... и еще {len(results) - 15} результатов**\n"
        
        formatted += "💡 Используйте соответствующие команды для получения подробной информации."
        
        return formatted 