import asyncio
import logging
from datetime import datetime, timedelta
from collections import defaultdict
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, BotCommand
from aiogram.filters import Command
from aiogram.client.default import DefaultBotProperties
from aiogram.enums.parse_mode import ParseMode
from data.emergency_data import EmergencyData
import os
from dotenv import load_dotenv
import re
import time
from typing import Dict

from database.models import Database, User, CommandLog
from utils.logger import get_logger, log_info, log_error, log_warning, log_user_action, log_security_event

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
BOT_TOKEN = os.getenv('BOT_TOKEN')
if not BOT_TOKEN:
    logger.error("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω! –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ —Ñ–∞–π–ª .env")
    exit(1)

bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(
        parse_mode=ParseMode.MARKDOWN
    )
)
dp = Dispatcher()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
emergency_data = EmergencyData()

# === –ê–ù–¢–ò–°–ü–ê–ú –°–ò–°–¢–ï–ú–ê ===
user_requests = defaultdict(list)
MAX_REQUESTS_PER_MINUTE = 30
SPAM_BAN_DURATION = 300  # 5 –º–∏–Ω—É—Ç –±–∞–Ω–∞
banned_users = {}

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤
ADMIN_IDS = []
admin_ids_str = os.getenv('ADMIN_IDS', '')
if admin_ids_str:
    ADMIN_IDS = [int(id_str.strip()) for id_str in admin_ids_str.split(',') if id_str.strip()]

def is_admin(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    return user_id in ADMIN_IDS

def is_user_banned(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if user_id in banned_users:
        if datetime.now() < banned_users[user_id]:
            return True
        else:
            del banned_users[user_id]
    return False

def check_rate_limit(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤"""
    now = datetime.now()
    minute_ago = now - timedelta(minutes=1)
    
    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    user_requests[user_id] = [req_time for req_time in user_requests[user_id] if req_time > minute_ago]
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞
    if len(user_requests[user_id]) >= MAX_REQUESTS_PER_MINUTE:
        # –ë–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        banned_users[user_id] = now + timedelta(seconds=SPAM_BAN_DURATION)
        return False
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    user_requests[user_id].append(now)
    return True

# Middleware –¥–ª—è –∞–Ω—Ç–∏—Å–ø–∞–º–∞
@dp.message.middleware()
async def anti_spam_middleware(handler, event: Message, data):
    user_id = event.from_user.id
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏)
    try:
        user = await User.get_or_create_user(
            user_id=user_id,
            username=event.from_user.username,
            first_name=event.from_user.first_name,
            last_name=event.from_user.last_name
        )
        if user:
            await user.update_activity()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
    if is_user_banned(user_id):
        await event.answer("üö´ –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞.")
        return
    
    # Rate limiting
    if not check_rate_limit(user_id):
        await event.answer("‚è≥ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ.")
        return
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    command = event.text.split()[0] if event.text else "unknown"
    log_user_action(user_id, command)
    
    # –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    return await handler(event, data)

@dp.callback_query.middleware() 
async def callback_middleware(handler, event, data):
    user_id = event.from_user.id
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–æ–∫
    try:
        user = await User.get_or_create_user(
            user_id=user_id,
            username=event.from_user.username,
            first_name=event.from_user.first_name,
            last_name=event.from_user.last_name
        )
        if user:
            await user.update_activity()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
    
    return await handler(event, data)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def get_main_menu(user_id: int = None):
    keyboard = [
        [
            InlineKeyboardButton(text="üöë –ú–µ–¥–∏—Ü–∏–Ω–∞", callback_data="med"),
            InlineKeyboardButton(text="üöí –ü–æ–∂–∞—Ä–Ω—ã–µ", callback_data="fire")
        ],
        [
            InlineKeyboardButton(text="üëÆ –ü–æ–ª–∏—Ü–∏—è", callback_data="police"),
            InlineKeyboardButton(text="üÜò –°–ø–∞—Å–∞—Ç–µ–ª–∏", callback_data="rescue")
        ],
        [
            InlineKeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts"),
            InlineKeyboardButton(text="ü§ñ –ò–ò –ü–æ–º–æ—â–Ω–∏–∫", callback_data="ai_menu")
        ]
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∞–¥–º–∏–Ω–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    if user_id and is_admin(user_id):
        keyboard.append([InlineKeyboardButton(text="üîß –ê–¥–º–∏–Ω–∫–∞", callback_data="admin_panel")])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
@dp.message(Command("start"))
async def start_command(message: types.Message):
    welcome_text = """
üö® **–ü–æ–º–æ—â–Ω–∏–∫ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É–∂–±**

–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É–∂–± –†–§.
–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö.

üìñ **–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –º–∏—Å—Å–∏–∏:** [–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å](https://telegra.ph/Cifrovoj-pomoshchnik-ehkstrennyh-sluzhb-06-12)

üöë **–ú–µ–¥–∏—Ü–∏–Ω–∞**: —Ä–∞—Å—á–µ—Ç –¥–æ–∑–∏—Ä–æ–≤–æ–∫ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤, –ø—Ä–æ—Ç–∏–≤–æ—è–¥–∏—è –ø—Ä–∏ –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏—è—Ö, –∞–ª–≥–æ—Ä–∏—Ç–º—ã —Ä–µ–∞–Ω–∏–º–∞—Ü–∏–∏
üöí **–ü–æ–∂–∞—Ä–Ω—ã–µ**: –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–∂–∞—Ä–æ–≤, –≤—ã–±–æ—Ä –æ–≥–Ω–µ—Ç—É—à–∞—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤, –æ–ø–∞—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã  
üëÆ **–ü–æ–ª–∏—Ü–∏—è**: —Å—Ç–∞—Ç—å–∏ –£–ö –†–§ –∏ –ö–æ–ê–ü, –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –∑–∞–¥–µ—Ä–∂–∞–Ω–∏—è, –ø—Ä–∞–≤–∞ –≥—Ä–∞–∂–¥–∞–Ω
üÜò **–°–ø–∞—Å–∞—Ç–µ–ª–∏**: –º–µ—Ç–æ–¥—ã –ø–æ–∏—Å–∫–∞ –ª—é–¥–µ–π, –≤—Ä–µ–º—è –≤—ã–∂–∏–≤–∞–Ω–∏—è, –≤–ª–∏—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã –Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏

**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
‚îú `/poison [–Ω–∞–∑–≤–∞–Ω–∏–µ]` - –ø—Ä–æ—Ç–∏–≤–æ—è–¥–∏–µ –ø—Ä–∏ –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏–∏
‚îú `/dose [–ª–µ–∫–∞—Ä—Å—Ç–≤–æ] [–≤–µ—Å]` - —Ä–∞—Å—á–µ—Ç –¥–æ–∑–∏—Ä–æ–≤–∫–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞  
‚îú `/fire [–∫–ª–∞—Å—Å]` - —Å–ø–æ—Å–æ–±—ã —Ç—É—à–µ–Ω–∏—è –ø–æ–∂–∞—Ä–∞
‚îî `/law [—Å—Ç–∞—Ç—å—è]` - —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏ –∑–∞–∫–æ–Ω–∞

üí° **–°–æ–≤–µ—Ç:** –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë

–ü–æ–ª–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –∫–æ–º–∞–Ω–¥
‚îî`/help`

**–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @kitay9
**–í–µ—Ä—Å–∏—è:** 2.0 | **–°—Ç–∞—Ç—É—Å:** –ê–∫—Ç–∏–≤–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
    """
    
    await message.answer(
        welcome_text, 
        reply_markup=get_main_menu(message.from_user.id),
        parse_mode="Markdown"
    )

# –ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏
@dp.message(Command("help"))
async def help_command(message: types.Message):
    help_text = """
üìö **–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥:**

**üöë –ú–ï–î–ò–¶–ò–ù–ê:**
‚Ä¢ `/dose [–ª–µ–∫–∞—Ä—Å—Ç–≤–æ] [–≤–µ—Å]` - —Ä–∞—Å—á–µ—Ç –¥–æ–∑–∏—Ä–æ–≤–∫–∏
‚Ä¢ `/poison [–≤–µ—â–µ—Å—Ç–≤–æ]` - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ç–∏–≤–æ—è–¥–∏–∏
‚Ä¢ `/drug [–Ω–∞–∑–≤–∞–Ω–∏–µ]` - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–µ–∫–∞—Ä—Å—Ç–≤–µ
‚Ä¢ `/resus` - –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–µ–∞–Ω–∏–º–∞—Ü–∏–∏

**üöí –ü–û–ñ–ê–†–ù–´–ï:**
‚Ä¢ `/fire [–∫–ª–∞—Å—Å]` - —Å–ø–æ—Å–æ–±—ã —Ç—É—à–µ–Ω–∏—è (A, B, C, D, E)
‚Ä¢ `/hazmat [–≤–µ—â–µ—Å—Ç–≤–æ]` - –æ–ø–∞—Å–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞
‚Ä¢ `/evacuation` - –∞–ª–≥–æ—Ä–∏—Ç–º —ç–≤–∞–∫—É–∞—Ü–∏–∏

**üëÆ –ü–û–õ–ò–¶–ò–Ø:**
‚Ä¢ `/law [–Ω–æ–º–µ—Ä —Å—Ç–∞—Ç—å–∏]` - —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏ –£–ö –†–§
‚Ä¢ `/admin [–Ω–æ–º–µ—Ä]` - —Å—Ç–∞—Ç—å–∏ –ö–æ–ê–ü
‚Ä¢ `/protocol [—Ç–∏–ø]` - —à–∞–±–ª–æ–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª–∞
‚Ä¢ `/rights` - –ø—Ä–∞–≤–∞ —á–µ–ª–æ–≤–µ–∫–∞ –ø—Ä–∏ –∑–∞–¥–µ—Ä–∂–∞–Ω–∏–∏

**üÜò –°–ü–ê–°–ê–¢–ï–õ–ò:**
‚Ä¢ `/search [–º–µ—Ç–æ–¥]` - –º–µ—Ç–æ–¥—ã –ø–æ–∏—Å–∫–∞
‚Ä¢ `/survival [—É—Å–ª–æ–≤–∏—è]` - –≤—Ä–µ–º—è –≤—ã–∂–∏–≤–∞–Ω–∏—è
‚Ä¢ `/weather` - –≤–ª–∏—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã –Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏

**üåç –û–ë–©–ò–ï:**
‚Ä¢ `/contacts [—Å–ª—É–∂–±–∞]` - —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
‚Ä¢ `/checklist [—Ç–∏–ø –ß–°]` - –∞–ª–≥–æ—Ä–∏—Ç–º –¥–µ–π—Å—Ç–≤–∏–π

üí° **–°–æ–≤–µ—Ç:** –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ª—é–±—É—é –∫–æ–º–∞–Ω–¥—É —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë
    """
    
    help_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
    ])
    
    await message.answer(help_text, reply_markup=help_keyboard, parse_mode="Markdown")

# –†–∞—Å—á–µ—Ç –¥–æ–∑–∏—Ä–æ–≤–∫–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤
@dp.message(Command("dose"))
async def dose_command(message: types.Message):
    try:
        args = message.text.split()[1:]
        if len(args) < 2:
            error_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üíä –ö –ª–µ–∫–∞—Ä—Å—Ç–≤–∞–º", callback_data="med_dose")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            await message.answer("‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `/dose [–ª–µ–∫–∞—Ä—Å—Ç–≤–æ] [–≤–µ—Å –≤ –∫–≥]`\n–ü—Ä–∏–º–µ—Ä: `/dose –∞–¥—Ä–µ–Ω–∞–ª–∏–Ω 70`\n\nüí° **–°–æ–≤–µ—Ç:** –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë", reply_markup=error_keyboard, parse_mode="Markdown")
            return
        
        drug = args[0].lower()
        weight = float(args[1])
        
        dose_info = emergency_data.calculate_dose(drug, weight)
        if dose_info.startswith("‚ÑπÔ∏è"):
            # –ï—Å–ª–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
            error_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üíä –ö –ª–µ–∫–∞—Ä—Å—Ç–≤–∞–º", callback_data="med_dose")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            await message.answer(dose_info, reply_markup=error_keyboard, parse_mode="Markdown")
        else:
            # –ü—Ä–µ–ø–∞—Ä–∞—Ç –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–∑–∏—Ä–æ–≤–∫—É
            dose_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üíä –ö –ª–µ–∫–∞—Ä—Å—Ç–≤–∞–º", callback_data="med_dose")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            await message.answer(f"üíä **–î–æ–∑–∏—Ä–æ–≤–∫–∞ –¥–ª—è {drug.title()}:**\n\n{dose_info}", reply_markup=dose_keyboard, parse_mode="Markdown")
    except (ValueError, IndexError):
        error_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üíä –ö –ª–µ–∫–∞—Ä—Å—Ç–≤–∞–º", callback_data="med_dose")],
            [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
        ])
        await message.answer("‚ÑπÔ∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `/dose [–ª–µ–∫–∞—Ä—Å—Ç–≤–æ] [–≤–µ—Å –≤ –∫–≥]`\n\nüí° **–°–æ–≤–µ—Ç:** –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë", reply_markup=error_keyboard, parse_mode="Markdown")

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —è–¥–∞—Ö –∏ –ø—Ä–æ—Ç–∏–≤–æ—è–¥–∏—è—Ö
@dp.message(Command("poison"))
async def poison_command(message: types.Message):
    try:
        args = message.text.split()[1:]
        if not args:
            error_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚ò†Ô∏è –ö –ø—Ä–æ—Ç–∏–≤–æ—è–¥–∏—è–º", callback_data="med_poison")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            await message.answer("‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `/poison [–Ω–∞–∑–≤–∞–Ω–∏–µ –≤–µ—â–µ—Å—Ç–≤–∞]`\n–ü—Ä–∏–º–µ—Ä: `/poison –º—ã—à—å—è–∫`\n\nüí° **–°–æ–≤–µ—Ç:** –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë", reply_markup=error_keyboard, parse_mode="Markdown")
            return
        
        poison = " ".join(args).lower()
        poison_info = emergency_data.get_poison_info(poison)
        
        if poison_info.startswith("‚ÑπÔ∏è"):
            # –ï—Å–ª–∏ —è–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω
            error_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚ò†Ô∏è –ö —è–¥–∞–º", callback_data="med_poison")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            await message.answer(poison_info, reply_markup=error_keyboard, parse_mode="Markdown")
        else:
            # –Ø–¥ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            poison_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚ò†Ô∏è –ö —è–¥–∞–º", callback_data="med_poison")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            await message.answer(f"‚ò†Ô∏è **{poison.title()}**\n\n{poison_info}", reply_markup=poison_keyboard, parse_mode="Markdown")
            
    except Exception as e:
        error_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚ò†Ô∏è –ö –ø—Ä–æ—Ç–∏–≤–æ—è–¥–∏—è–º", callback_data="med_poison")],
            [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
        ])
        await message.answer("‚ÑπÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏", reply_markup=error_keyboard, parse_mode="Markdown")

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∞—Å—Å–∞—Ö –ø–æ–∂–∞—Ä–æ–≤
@dp.message(Command("fire"))
async def fire_command(message: types.Message):
    try:
        args = message.text.split()[1:]
        if not args:
            error_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üî• –ö –∫–ª–∞—Å—Å–∞–º –ø–æ–∂–∞—Ä–æ–≤", callback_data="fire_classes")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            await message.answer("‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `/fire [–∫–ª–∞—Å—Å]`\n–ü—Ä–∏–º–µ—Ä: `/fire A` –∏–ª–∏ `/fire —ç–ª–µ–∫—Ç—Ä–æ`\n\nüí° **–°–æ–≤–µ—Ç:** –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë", reply_markup=error_keyboard, parse_mode="Markdown")
            return
        
        fire_class = args[0].upper()
        fire_info = emergency_data.get_fire_class_info(fire_class)
        
        if fire_info.startswith("‚ÑπÔ∏è"):
            # –ï—Å–ª–∏ –∫–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω
            error_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üî• –ö –ø–æ–∂–∞—Ä–∞–º", callback_data="fire_classes")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            await message.answer(fire_info, reply_markup=error_keyboard, parse_mode="Markdown")
        else:
            # –ö–ª–∞—Å—Å –Ω–∞–π–¥–µ–Ω
            fire_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üî• –ö –ø–æ–∂–∞—Ä–∞–º", callback_data="fire_classes")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            await message.answer(f"üî• **–ö–ª–∞—Å—Å {fire_class.upper()}**\n\n{fire_info}", reply_markup=fire_keyboard, parse_mode="Markdown")
            
    except Exception as e:
        error_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üî• –ö –∫–ª–∞—Å—Å–∞–º –ø–æ–∂–∞—Ä–æ–≤", callback_data="fire_classes")],
            [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
        ])
        await message.answer("‚ÑπÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏", reply_markup=error_keyboard, parse_mode="Markdown")

# –°—Ç–∞—Ç—å–∏ –£–ö –†–§
@dp.message(Command("law"))
async def law_command(message: types.Message):
    try:
        args = message.text.split()[1:]
        if not args:
            error_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚öñÔ∏è –ö –£–ö –†–§", callback_data="police_criminal")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            await message.answer("‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `/law [–Ω–æ–º–µ—Ä —Å—Ç–∞—Ç—å–∏]`\n–ü—Ä–∏–º–µ—Ä: `/law 228`\n\nüí° **–°–æ–≤–µ—Ç:** –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë", reply_markup=error_keyboard, parse_mode="Markdown")
            return
        
        article = args[0]
        law_info = emergency_data.get_criminal_article(article)
        
        if law_info.startswith("‚ÑπÔ∏è"):
            # –ï—Å–ª–∏ —Å—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
            error_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚öñÔ∏è –ö –£–ö –†–§", callback_data="police_criminal")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            await message.answer(law_info, reply_markup=error_keyboard, parse_mode="Markdown")
        else:
            # –°—Ç–∞—Ç—å—è –Ω–∞–π–¥–µ–Ω–∞
            law_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚öñÔ∏è –ö –£–ö –†–§", callback_data="police_criminal")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            await message.answer(law_info, reply_markup=law_keyboard, parse_mode="Markdown")
            
    except Exception as e:
        error_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚öñÔ∏è –ö –£–ö –†–§", callback_data="police_criminal")],
            [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
        ])
        await message.answer("‚ÑπÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å—Ç–∞—Ç—å–∏", reply_markup=error_keyboard, parse_mode="Markdown")

# –°—Ç–∞—Ç—å–∏ –ö–æ–ê–ü –†–§
@dp.message(Command("admin"))
async def admin_command(message: types.Message):
    try:
        args = message.text.split()[1:]
        if not args:
            error_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –ö–æ–ê–ü", callback_data="police_admin")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            await message.answer("‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `/admin [–Ω–æ–º–µ—Ä —Å—Ç–∞—Ç—å–∏]`\n–ü—Ä–∏–º–µ—Ä: `/admin 20.1`\n\nüí° **–°–æ–≤–µ—Ç:** –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë", reply_markup=error_keyboard, parse_mode="Markdown")
            return
        
        article = args[0]
        admin_info = emergency_data.get_admin_article(article)
        
        if admin_info.startswith("‚ÑπÔ∏è"):
            # –ï—Å–ª–∏ —Å—Ç–∞—Ç—å—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
            error_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –ö–æ–ê–ü", callback_data="police_admin")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            await message.answer(admin_info, reply_markup=error_keyboard, parse_mode="Markdown")
        else:
            # –°—Ç–∞—Ç—å—è –Ω–∞–π–¥–µ–Ω–∞
            admin_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –ö–æ–ê–ü", callback_data="police_admin")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            await message.answer(admin_info, reply_markup=admin_keyboard, parse_mode="Markdown")
            
    except Exception as e:
        error_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ö –ö–æ–ê–ü", callback_data="police_admin")],
            [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
        ])
        await message.answer("‚ÑπÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å—Ç–∞—Ç—å–∏", reply_markup=error_keyboard, parse_mode="Markdown")



# === –ò–ò –ö–û–ú–ê–ù–î–´ ===
@dp.message(Command("ai_symptoms"))
async def ai_symptoms_command(message: types.Message):
    ai_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="ü©∫ –ö –ò–ò –º–µ–Ω—é", callback_data="ai_menu")],
        [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
    ])
    
    await message.answer(
        "üöß **–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ**\n\n–ò–ò –∞–Ω–∞–ª–∏–∑ —Å–∏–º–ø—Ç–æ–º–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.\n\n–ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –≤ —Ä–∞–∑–¥–µ–ª–µ '–ú–µ–¥–∏—Ü–∏–Ω–∞'.",
        reply_markup=ai_keyboard,
        parse_mode="Markdown"
    )

@dp.message(Command("ai_protocol"))
async def ai_protocol_command(message: types.Message):
    ai_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìù –ö –ò–ò –º–µ–Ω—é", callback_data="ai_menu")],
        [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
    ])
    
    await message.answer(
        "üöß **–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ**\n\n–ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.\n\n–ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —à–∞–±–ª–æ–Ω—ã –≤ —Ä–∞–∑–¥–µ–ª–µ '–ü–æ–ª–∏—Ü–∏—è'.",
        reply_markup=ai_keyboard,
        parse_mode="Markdown"
    )

@dp.message(Command("ai_legal"))
async def ai_legal_command(message: types.Message):
    ai_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚öñÔ∏è –ö –ò–ò –º–µ–Ω—é", callback_data="ai_menu")],
        [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
    ])
    
    await message.answer(
        "üöß **–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ**\n\n–ò–ò –ø—Ä–∞–≤–æ–≤—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.\n\n–ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∞–∑—É —Å—Ç–∞—Ç–µ–π –≤ —Ä–∞–∑–¥–µ–ª–µ '–ü–æ–ª–∏—Ü–∏—è'.",
        reply_markup=ai_keyboard,
        parse_mode="Markdown"
    )

@dp.message(Command("ai_checklist"))
async def ai_checklist_command(message: types.Message):
    ai_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ö –ò–ò –º–µ–Ω—é", callback_data="ai_menu")],
        [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
    ])
    
    await message.answer(
        "üöß **–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ**\n\n–ò–ò —á–µ–∫-–ª–∏—Å—Ç—ã –¥–ª—è –ß–° –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.\n\n–ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ä–∞–∑–¥–µ–ª–∞—Ö.",
        reply_markup=ai_keyboard,
        parse_mode="Markdown"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
@dp.callback_query()
async def handle_callbacks(callback: types.CallbackQuery):
    # === –ì–õ–ê–í–ù–´–ï –†–ê–ó–î–ï–õ–´ ===
    if callback.data == "med":
        med_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üíä –î–æ–∑–∏—Ä–æ–≤–∫–∏", callback_data="med_dose"),
                InlineKeyboardButton(text="‚ò†Ô∏è –ü—Ä–æ—Ç–∏–≤–æ—è–¥–∏—è", callback_data="med_poison")
            ],
            [
                InlineKeyboardButton(text="ü´Ä –†–µ–∞–Ω–∏–º–∞—Ü–∏—è", callback_data="med_resus"),
                InlineKeyboardButton(text="ü©∫ –ê–ª–≥–æ—Ä–∏—Ç–º—ã", callback_data="med_algo")
            ],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")]
        ])
        
        await callback.message.edit_text(
            "üöë **–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π —Ä–∞–∑–¥–µ–ª**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
            reply_markup=med_keyboard,
            parse_mode="Markdown"
        )
    
    elif callback.data == "fire":
        fire_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üî• –ö–ª–∞—Å—Å—ã –ø–æ–∂–∞—Ä–æ–≤", callback_data="fire_classes"),
                InlineKeyboardButton(text="üßØ –û–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª–∏", callback_data="fire_extinguish")
            ],
            [
                InlineKeyboardButton(text="‚ò£Ô∏è –û–ø–∞—Å–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞", callback_data="fire_hazmat"),
                InlineKeyboardButton(text="üö™ –≠–≤–∞–∫—É–∞—Ü–∏—è", callback_data="fire_evac")
            ],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")]
        ])
        
        await callback.message.edit_text(
            "üöí **–ü–æ–∂–∞—Ä–Ω–∞—è —Å–ª—É–∂–±–∞**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
            reply_markup=fire_keyboard,
            parse_mode="Markdown"
        )
    
    elif callback.data == "police":
        police_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="‚öñÔ∏è –£–ö –†–§", callback_data="police_criminal"),
                InlineKeyboardButton(text="–ö–æ–ê–ü", callback_data="police_admin")
            ],
            [
                InlineKeyboardButton(text="üõ°Ô∏è –ü—Ä–∞–≤–∞ –≥—Ä–∞–∂–¥–∞–Ω", callback_data="police_rights"),
                InlineKeyboardButton(text="üìù –ü—Ä–æ—Ç–æ–∫–æ–ª—ã", callback_data="police_protocols")
            ],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")]
        ])
        
        await callback.message.edit_text(
            "üëÆ **–ü–æ–ª–∏—Ü–∏—è**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
            reply_markup=police_keyboard,
            parse_mode="Markdown"
        )
    
    elif callback.data == "rescue":
        rescue_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="üîç –ú–µ—Ç–æ–¥—ã –ø–æ–∏—Å–∫–∞", callback_data="rescue_search"),
                InlineKeyboardButton(text="üèîÔ∏è –í—ã–∂–∏–≤–∞–Ω–∏–µ", callback_data="rescue_survival")
            ],
            [
                InlineKeyboardButton(text="üå¶Ô∏è –ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è", callback_data="rescue_weather"),
                InlineKeyboardButton(text="üì° –°–≤—è–∑—å", callback_data="rescue_comms")
            ],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")]
        ])
        
        await callback.message.edit_text(
            "üÜò **–°–ø–∞—Å–∞—Ç–µ–ª—å–Ω–∞—è —Å–ª—É–∂–±–∞**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
            reply_markup=rescue_keyboard,
            parse_mode="Markdown"
        )
    

    
    elif callback.data == "contacts":
        contact_info = emergency_data.get_emergency_contacts()
        await callback.message.edit_text(
            contact_info,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    # === –ú–ï–î–ò–¶–ò–ù–°–ö–ò–ï –ü–û–î–†–ê–ó–î–ï–õ–´ ===
    elif callback.data == "med_dose":
        dose_text = emergency_data.get_all_drugs()
        await callback.message.edit_text(
            dose_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –º–µ–¥–∏—Ü–∏–Ω–µ", callback_data="med")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "med_poison":
        poison_text = emergency_data.get_all_poisons()
        await callback.message.edit_text(
            poison_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –º–µ–¥–∏—Ü–∏–Ω–µ", callback_data="med")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "med_resus":
        resus_info = emergency_data.get_resuscitation_algorithm()
        await callback.message.edit_text(
            resus_info,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –º–µ–¥–∏—Ü–∏–Ω–µ", callback_data="med")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "med_algo":
        algo_text = """
ü©∫ **–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã**

**–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã:**
‚Ä¢ ü´Ä –°–õ–† - –Ω–∞–∂–º–∏—Ç–µ "–†–µ–∞–Ω–∏–º–∞—Ü–∏—è" –≤—ã—à–µ
‚Ä¢ ü§ï –¢—Ä–∞–≤–º—ã - –æ—Ü–µ–Ω–∫–∞ –ø–æ —à–∫–∞–ª–µ ABC
‚Ä¢ üî• –û–∂–æ–≥–∏ - –ø—Ä–∞–≤–∏–ª–æ –¥–µ–≤—è—Ç–æ–∫
‚Ä¢ üíî –ò–Ω—Ñ–∞—Ä–∫—Ç - –∞–ª–≥–æ—Ä–∏—Ç–º –ú–û–ù–ê
‚Ä¢ üß† –ò–Ω—Å—É–ª—å—Ç - —à–∫–∞–ª–∞ FAST

**–®–∫–∞–ª–∞ ABC (—Ç—Ä–∞–≤–º—ã):**
‚Ä¢ **A** - Airway (–¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏)
‚Ä¢ **B** - Breathing (–¥—ã—Ö–∞–Ω–∏–µ) 
‚Ä¢ **C** - Circulation (–∫—Ä–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–∏–µ)

**–®–∫–∞–ª–∞ FAST (–∏–Ω—Å—É–ª—å—Ç):**
‚Ä¢ **F** - Face (–ª–∏—Ü–æ) - –ø–µ—Ä–µ–∫–æ—Å
‚Ä¢ **A** - Arms (—Ä—É–∫–∏) - —Å–ª–∞–±–æ—Å—Ç—å
‚Ä¢ **S** - Speech (—Ä–µ—á—å) - –Ω–∞—Ä—É—à–µ–Ω–∏—è
‚Ä¢ **T** - Time (–≤—Ä–µ–º—è) - –≤—ã–∑–æ–≤ 103
        """
        await callback.message.edit_text(
            algo_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –º–µ–¥–∏—Ü–∏–Ω–µ", callback_data="med")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    # === –ü–û–ñ–ê–†–ù–´–ï –ü–û–î–†–ê–ó–î–ï–õ–´ ===
    elif callback.data == "fire_classes":
        fire_classes_info = emergency_data.get_all_fire_classes()
        await callback.message.edit_text(
            fire_classes_info,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –ø–æ–∂–∞—Ä–Ω—ã–º", callback_data="fire")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "fire_extinguish":
        extinguish_text = """
üßØ **–û–≥–Ω–µ—Ç—É—à–∞—â–∏–µ –≤–µ—â–µ—Å—Ç–≤–∞**

**–¢–∏–ø—ã –æ–≥–Ω–µ—Ç—É—à–∏—Ç–µ–ª–µ–π:**
‚Ä¢ **–í–æ–¥–Ω—ã–µ** - –∫–ª–∞—Å—Å A (—Ç–≤–µ—Ä–¥—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞)
‚Ä¢ **–ü–µ–Ω–Ω—ã–µ** - –∫–ª–∞—Å—Å A, B (–∂–∏–¥–∫–æ—Å—Ç–∏) 
‚Ä¢ **–ü–æ—Ä–æ—à–∫–æ–≤—ã–µ** - —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ ABC
‚Ä¢ **–£–≥–ª–µ–∫–∏—Å–ª–æ—Ç–Ω—ã–µ** - –∫–ª–∞—Å—Å B, C, E
‚Ä¢ **–•–ª–∞–¥–æ–Ω–æ–≤—ã–µ** - —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞, –º—É–∑–µ–∏

**‚ö†Ô∏è –ó–ê–ü–†–ï–©–ï–ù–û:**
‚Ä¢ –í–æ–¥–∞ –Ω–∞ –∫–ª–∞—Å—Å B, D, E
‚Ä¢ –ü–µ–Ω–∞ –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∏
‚Ä¢ –õ—é–±—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –∞–∫—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–∞–ª–ª—ã –±–µ–∑ —Å–ø–µ—Ü–ø–æ—Ä–æ—à–∫–æ–≤

**–ü—Ä–∞–≤–∏–ª–æ –≤—ã–±–æ—Ä–∞:**
1. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–ª–∞—Å—Å –ø–æ–∂–∞—Ä–∞
2. –í—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–µ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ
3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
        """
        await callback.message.edit_text(
            extinguish_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –ø–æ–∂–∞—Ä–Ω—ã–º", callback_data="fire")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "fire_hazmat":
        hazmat_text = """
‚ò£Ô∏è **–û–ø–∞—Å–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞**

**–ö–ª–∞—Å—Å—ã –æ–ø–∞—Å–Ω–æ—Å—Ç–∏:**
‚Ä¢ **–ö–ª–∞—Å—Å 1** - –í–∑—Ä—ã–≤—á–∞—Ç—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞
‚Ä¢ **–ö–ª–∞—Å—Å 2** - –ì–∞–∑—ã (–≤–æ—Å–ø–ª–∞–º–µ–Ω—è—é—â–∏–µ—Å—è, —Ç–æ–∫—Å–∏—á–Ω—ã–µ)
‚Ä¢ **–ö–ª–∞—Å—Å 3** - –õ–µ–≥–∫–æ–≤–æ—Å–ø–ª–∞–º–µ–Ω—è—é—â–∏–µ—Å—è –∂–∏–¥–∫–æ—Å—Ç–∏
‚Ä¢ **–ö–ª–∞—Å—Å 4** - –¢–≤–µ—Ä–¥—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞, —Å–∞–º–æ–≤–æ–∑–≥–æ—Ä–∞—é—â–∏–µ—Å—è
‚Ä¢ **–ö–ª–∞—Å—Å 5** - –û–∫–∏—Å–ª—è—é—â–∏–µ –≤–µ—â–µ—Å—Ç–≤–∞
‚Ä¢ **–ö–ª–∞—Å—Å 6** - –¢–æ–∫—Å–∏—á–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞
‚Ä¢ **–ö–ª–∞—Å—Å 7** - –†–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ **–ö–ª–∞—Å—Å 8** - –ï–¥–∫–∏–µ –∏ –∫–æ—Ä—Ä–æ–∑–∏–æ–Ω–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞
‚Ä¢ **–ö–ª–∞—Å—Å 9** - –ü—Ä–æ—á–∏–µ –æ–ø–∞—Å–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞

**üö® –ü—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å HAZMAT:**
1. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–ª–∞—Å—Å –æ–ø–∞—Å–Ω–æ—Å—Ç–∏
2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –°–ò–ó
3. –û–±–µ—Å–ø–µ—á–∏—Ç—å –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—é
4. –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –Ω–µ–π—Ç—Ä–∞–ª–∏–∑—É—é—â–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞
        """
        await callback.message.edit_text(
            hazmat_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –ø–æ–∂–∞—Ä–Ω—ã–º", callback_data="fire")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "fire_evac":
        evac_text = """
üö™ **–ê–ª–≥–æ—Ä–∏—Ç–º —ç–≤–∞–∫—É–∞—Ü–∏–∏**

**–ü–æ—Ä—è–¥–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π:**

**1. –û–ø–æ–≤–µ—â–µ–Ω–∏–µ (1-2 –º–∏–Ω):**
‚Ä¢ –í–∫–ª—é—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—é
‚Ä¢ –û–±—ä—è–≤–∏—Ç—å –ø–æ –≥—Ä–æ–º–∫–æ–π —Å–≤—è–∑–∏
‚Ä¢ –°–æ–æ–±—â–∏—Ç—å –≤ —Å–ª—É–∂–±—ã: 101, 112

**2. –≠–≤–∞–∫—É–∞—Ü–∏—è –ª—é–¥–µ–π (5-10 –º–∏–Ω):**
‚Ä¢ –û—Ç–∫—Ä—ã—Ç—å –≤—Å–µ —ç–≤–∞–∫—É–∞—Ü–∏–æ–Ω–Ω—ã–µ –≤—ã—Ö–æ–¥—ã
‚Ä¢ –û—Ç–∫–ª—é—á–∏—Ç—å –ª–∏—Ñ—Ç—ã (–∫—Ä–æ–º–µ –ø–æ–∂–∞—Ä–Ω—ã—Ö)
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –ø–æ–º–µ—â–µ–Ω–∏—è
‚Ä¢ –ü–æ–º–æ—á—å –º–∞–ª–æ–º–æ–±–∏–ª—å–Ω—ã–º

**3. –í—Å—Ç—Ä–µ—á–∞ —Å–ª—É–∂–±:**
‚Ä¢ –í—Å—Ç—Ä–µ—Ç–∏—Ç—å –ø–æ–∂–∞—Ä–Ω—ã—Ö —É –≤—ä–µ–∑–¥–∞
‚Ä¢ –ü–µ—Ä–µ–¥–∞—Ç—å –ø–ª–∞–Ω—ã –∑–¥–∞–Ω–∏—è
‚Ä¢ –°–æ–æ–±—â–∏—Ç—å –æ –ª—é–¥—è—Ö –≤–Ω—É—Ç—Ä–∏
‚Ä¢ –£–∫–∞–∑–∞—Ç—å –º–µ—Å—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π

**‚ö†Ô∏è –ó–∞–ø—Ä–µ—â–µ–Ω–æ:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏—Ñ—Ç—ã
‚Ä¢ –û—Ç–∫—Ä—ã–≤–∞—Ç—å –≥–æ—Ä—è—á–∏–µ –¥–≤–µ—Ä–∏
‚Ä¢ –í–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –∑–∞ –≤–µ—â–∞–º–∏
‚Ä¢ –ü—Ä—è—Ç–∞—Ç—å—Å—è –≤ –¥–∞–ª—å–Ω–∏—Ö –ø–æ–º–µ—â–µ–Ω–∏—è—Ö
        """
        await callback.message.edit_text(
            evac_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –ø–æ–∂–∞—Ä–Ω—ã–º", callback_data="fire")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    # === –ü–û–õ–ò–¶–ï–ô–°–ö–ò–ï –ü–û–î–†–ê–ó–î–ï–õ–´ ===
    elif callback.data == "police_criminal":
        criminal_text = emergency_data.get_all_criminal_articles()
        await callback.message.edit_text(
            criminal_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –ø–æ–ª–∏—Ü–∏–∏", callback_data="police")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "police_rights":
        rights_text = """
üõ°Ô∏è **–ü—Ä–∞–≤–∞ –≥—Ä–∞–∂–¥–∞–Ω –ø—Ä–∏ –∑–∞–¥–µ—Ä–∂–∞–Ω–∏–∏**

**–ü—Ä–∏ –∑–∞–¥–µ—Ä–∂–∞–Ω–∏–∏ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ:**
‚Ä¢ –ó–Ω–∞—Ç—å –æ—Å–Ω–æ–≤–∞–Ω–∏–µ –∏ –ø—Ä–∏—á–∏–Ω—É –∑–∞–¥–µ—Ä–∂–∞–Ω–∏—è
‚Ä¢ –£–≤–µ–¥–æ–º–∏—Ç—å –±–ª–∏–∑–∫–∏—Ö –æ –∑–∞–¥–µ—Ä–∂–∞–Ω–∏–∏
‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞
‚Ä¢ –û–±—Ä–∞—â–∞—Ç—å—Å—è –∑–∞ –º–µ–¥–ø–æ–º–æ—â—å—é
‚Ä¢ –¢—Ä–µ–±–æ–≤–∞—Ç—å –∞–¥–≤–æ–∫–∞—Ç–∞ (—Å –º–æ–º–µ–Ω—Ç–∞ –∑–∞–¥–µ—Ä–∂–∞–Ω–∏—è)
‚Ä¢ –ù–µ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–∏–≤ —Å–µ–±—è (—Å—Ç. 51 –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏)

**–°—Ä–æ–∫–∏ –∑–∞–¥–µ—Ä–∂–∞–Ω–∏—è:**
‚Ä¢ **–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ** - –¥–æ 3 —á–∞—Å–æ–≤ (48 —á–∞—Å–æ–≤ –ø–æ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å—Ç–∞—Ç—å—è–º)
‚Ä¢ **–£–≥–æ–ª–æ–≤–Ω–æ–µ** - –¥–æ 48 —á–∞—Å–æ–≤ (–¥–æ 72 —á–∞—Å–æ–≤ —Å —Å–∞–Ω–∫—Ü–∏–∏ —Å—É–¥–∞)

**‚ö†Ô∏è –í–∞–∂–Ω–æ:**
‚Ä¢ –ó–∞–¥–µ—Ä–∂–∞–Ω–Ω—ã–π –Ω–µ –æ–±—è–∑–∞–Ω –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –¥–æ –ø—Ä–∏–±—ã—Ç–∏—è –∞–¥–≤–æ–∫–∞—Ç–∞
‚Ä¢ –ü—Ä–æ—Ç–æ–∫–æ–ª –∑–∞–¥–µ—Ä–∂–∞–Ω–∏—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
‚Ä¢ –ü—Ä–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –ø—Ä–∞–≤ - –∂–∞–ª–æ–±–∞ –ø—Ä–æ–∫—É—Ä–æ—Ä—É/–≤ —Å—É–¥
        """
        await callback.message.edit_text(
            rights_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –ø–æ–ª–∏—Ü–∏–∏", callback_data="police")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "police_admin":
        admin_text = emergency_data.get_all_admin_articles()
        await callback.message.edit_text(
            admin_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –ø–æ–ª–∏—Ü–∏–∏", callback_data="police")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "police_protocols":
        protocols_text = """
üìù **–®–∞–±–ª–æ–Ω—ã –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤**

**–ü—Ä–æ—Ç–æ–∫–æ–ª –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–º –ø—Ä–∞–≤–æ–Ω–∞—Ä—É—à–µ–Ω–∏–∏:**

**–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è:**
‚Ä¢ –î–∞—Ç–∞, –≤—Ä–µ–º—è, –º–µ—Å—Ç–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
‚Ä¢ –§–ò–û, –¥–æ–ª–∂–Ω–æ—Å—Ç—å, –∑–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–∞–≤–∏—Ç–µ–ª—è
‚Ä¢ –°–≤–µ–¥–µ–Ω–∏—è –æ –ª–∏—Ü–µ, –ø—Ä–∏–≤–ª–µ–∫–∞–µ–º–æ–º –∫ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
‚Ä¢ –ú–µ—Å—Ç–æ, –≤—Ä–µ–º—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–∞–≤–æ–Ω–∞—Ä—É—à–µ–Ω–∏—è
‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∞–≤–æ–Ω–∞—Ä—É—à–µ–Ω–∏—è
‚Ä¢ –°—Ç–∞—Ç—å—è –ö–æ–ê–ü –†–§
‚Ä¢ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ª–∏—Ü–∞ (–æ—Ç–∫–∞–∑ –æ—Ç –æ–±—ä—è—Å–Ω–µ–Ω–∏—è)
‚Ä¢ –°–≤–∏–¥–µ—Ç–µ–ª–∏, –ø–æ—Ç–µ—Ä–ø–µ–≤—à–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)

**–û–±—Ä–∞–∑–µ—Ü –∑–∞–ø–∏—Å–∏ —Å–æ–±—ã—Ç–∏—è:**
"[–î–∞—Ç–∞] –≤ [–≤—Ä–µ–º—è] –ø–æ –∞–¥—Ä–µ—Å—É [–∞–¥—Ä–µ—Å] –≥—Ä. [–§–ò–û], [–≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è], [–¥–æ–∫—É–º–µ–Ω—Ç—ã], —Å–æ–≤–µ—Ä—à–∏–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ–Ω–∞—Ä—É—à–µ–Ω–∏–µ, –≤—ã—Ä–∞–∑–∏–≤—à–µ–µ—Å—è –≤ [–æ–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π], —á—Ç–æ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–æ —Å—Ç–∞—Ç—å–µ–π [–Ω–æ–º–µ—Ä] –ö–æ–ê–ü –†–§."

**–ü—Ä–æ—Ç–æ–∫–æ–ª –∑–∞–¥–µ—Ä–∂–∞–Ω–∏—è:**
‚Ä¢ –û—Å–Ω–æ–≤–∞–Ω–∏—è –∑–∞–¥–µ—Ä–∂–∞–Ω–∏—è
‚Ä¢ –î–∞—Ç–∞, –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
‚Ä¢ –ú–µ—Å—Ç–æ –∑–∞–¥–µ—Ä–∂–∞–Ω–∏—è
‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ª–∏—á–Ω–æ–≥–æ –¥–æ—Å–º–æ—Ç—Ä–∞
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±–ª–∏–∑–∫–∏—Ö/—Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è

**‚ö†Ô∏è –í–∞–∂–Ω–æ:**
‚Ä¢ –ü—Ä–æ—Ç–æ–∫–æ–ª —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
‚Ä¢ –ö–æ–ø–∏—è –≤—Ä—É—á–∞–µ—Ç—Å—è –Ω–∞—Ä—É—à–∏—Ç–µ–ª—é
‚Ä¢ –ü—Ä–∏ –æ—Ç–∫–∞–∑–µ –æ—Ç –ø–æ–¥–ø–∏—Å–∏ - –æ—Ç–º–µ—Ç–∫–∞ –≤ –ø—Ä–æ—Ç–æ–∫–æ–ª–µ
        """
        await callback.message.edit_text(
            protocols_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –ø–æ–ª–∏—Ü–∏–∏", callback_data="police")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "ai_menu":
        ai_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="ü©∫ –ê–Ω–∞–ª–∏–∑ —Å–∏–º–ø—Ç–æ–º–æ–≤", callback_data="ai_symptoms_menu"),
                InlineKeyboardButton(text="üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞", callback_data="ai_protocol_menu")
            ],
            [
                InlineKeyboardButton(text="‚öñÔ∏è –ü—Ä–∞–≤–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", callback_data="ai_legal_menu"),
                InlineKeyboardButton(text="–ß–µ–∫-–ª–∏—Å—Ç –ß–°", callback_data="ai_checklist_menu")
            ],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")]
        ])
        
        await callback.message.edit_text(
            f"**–ò–ò –ü–æ–º–æ—â–Ω–∏–∫** - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n\n–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É–∂–± –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.\n\n–§—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö:\n‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Å–∏–º–ø—Ç–æ–º–æ–≤\n‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤\n‚Ä¢ –ü—Ä–∞–≤–æ–≤—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n‚Ä¢ –ß–µ–∫-–ª–∏—Å—Ç—ã –¥–ª—è –ß–°",
            reply_markup=ai_keyboard,
            parse_mode="Markdown"
        )
    
    elif callback.data == "ai_symptoms_menu":
        await callback.message.edit_text(
            "üöß **–ò–ò –ê–Ω–∞–ª–∏–∑ —Å–∏–º–ø—Ç–æ–º–æ–≤ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ**\n\n–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.\n\n–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:\n‚Ä¢ –ê–Ω–∞–ª–∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è —Å–∏–º–ø—Ç–æ–º–æ–≤\n‚Ä¢ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞\n‚Ä¢ –û—Ü–µ–Ω–∫–∞ —Å—Ç–µ–ø–µ–Ω–∏ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏\n‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–µ—Ä–≤–æ–π –ø–æ–º–æ—â–∏\n\n–ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –ò–ò –º–µ–Ω—é", callback_data="ai_menu")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "ai_protocol_menu":
        await callback.message.edit_text(
            "üöß **–ò–ò –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ**\n\n–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.\n\n–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:\n‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤\n‚Ä¢ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞\n‚Ä¢ –®–∞–±–ª–æ–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–π\n‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è\n\n–ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –ò–ò –º–µ–Ω—é", callback_data="ai_menu")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "ai_legal_menu":
        await callback.message.edit_text(
            "üöß **–ò–ò –ü—Ä–∞–≤–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ**\n\n–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.\n\n–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:\n‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É\n‚Ä¢ –°—Å—ã–ª–∫–∏ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—å–∏\n‚Ä¢ –†–∞–∑—ä—è—Å–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä\n‚Ä¢ –ü–æ–º–æ—â—å –≤ —Å–ª–æ–∂–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö\n\n–ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∞–∑—É —Å—Ç–∞—Ç–µ–π –£–ö –†–§ –∏ –ö–æ–ê–ü.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –ò–ò –º–µ–Ω—é", callback_data="ai_menu")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "ai_checklist_menu":
        await callback.message.edit_text(
            "üöß **–ò–ò –ß–µ–∫-–ª–∏—Å—Ç –ß–° - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ**\n\n–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏.\n\n–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:\n‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–µ–∫-–ª–∏—Å—Ç—ã\n‚Ä¢ –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ —Ç–∏–ø –ß–°\n‚Ä¢ –ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\n‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π\n\n–ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –≤ —Ä–∞–∑–¥–µ–ª–∞—Ö —Å–ª—É–∂–±.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö –ò–ò –º–µ–Ω—é", callback_data="ai_menu")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "rescue_search":
        search_text = """
üîç **–ú–µ—Ç–æ–¥—ã –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–ø–∞–≤—à–∏—Ö –ª—é–¥–µ–π**

**–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã:**

**1. –ó–≤—É–∫–æ–≤–æ–π –ø–æ–∏—Å–∫:**
‚Ä¢ –ì–æ–ª–æ—Å–æ–≤—ã–µ –≤—ã–∑–æ–≤—ã –∫–∞–∂–¥—ã–µ 3-5 –º–∏–Ω—É—Ç
‚Ä¢ –°–≤–∏—Å—Ç–∫–∏, —Ä—É–ø–æ—Ä—ã, –º–µ–≥–∞—Ñ–æ–Ω—ã
‚Ä¢ –ü—Ä–æ—Å–ª—É—à–∫–∞ –≤ —Ç–∏—à–∏–Ω–µ 1-2 –º–∏–Ω—É—Ç—ã

**2. –í–∏–∑—É–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫:**
‚Ä¢ –û—Å–º–æ—Ç—Ä –º–µ—Å—Ç–Ω–æ—Å—Ç–∏ "–∑–∏–≥–∑–∞–≥–æ–º"
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–∏–Ω–æ–∫–ª–µ–π, –ø—Ä–æ–∂–µ–∫—Ç–æ—Ä–æ–≤
‚Ä¢ –ü–æ–∏—Å–∫ —Å–ª–µ–¥–æ–≤, –º–µ—Ç–æ–∫, –ø—Ä–µ–¥–º–µ—Ç–æ–≤

**3. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫:**
‚Ä¢ –†–∞–¥–∏–æ—Å–≤—è–∑—å, –º–æ–±–∏–ª—å–Ω–∞—è —Å–≤—è–∑—å
‚Ä¢ GPS-—Ç—Ä–µ–∫–µ—Ä—ã, —Ä–∞–¥–∏–æ–º–∞—è–∫–∏
‚Ä¢ –¢–µ–ø–ª–æ–≤–∏–∑–æ—Ä—ã (–Ω–æ—á—å—é/–≤ —Ö–æ–ª–æ–¥)
‚Ä¢ –î—Ä–æ–Ω—ã —Å –∫–∞–º–µ—Ä–∞–º–∏

**4. –ö–∏–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫:**
‚Ä¢ –ü–æ–∏—Å–∫–æ–≤—ã–µ —Å–æ–±–∞–∫–∏ –ø–æ –∑–∞–ø–∞—Ö—É
‚Ä¢ –†–∞–±–æ—Ç–∞ –ø–æ —Å–ª–µ–¥—É
‚Ä¢ –ü–æ–∏—Å–∫ –≤ –∑–∞–≤–∞–ª–∞—Ö

**‚è∞ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏:**
‚Ä¢ **–ü–µ—Ä–≤—ã–µ 3 —á–∞—Å–∞** - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
‚Ä¢ **–î–æ 24 —á–∞—Å–æ–≤** - –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–∏–æ–¥
‚Ä¢ **72 —á–∞—Å–∞** - –ø—Ä–µ–¥–µ–ª –≤—ã–∂–∏–≤–∞–Ω–∏—è –±–µ–∑ –≤–æ–¥—ã
        """
        await callback.message.edit_text(
            search_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö —Å–ø–∞—Å–∞—Ç–µ–ª—è–º", callback_data="rescue")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "rescue_survival":
        survival_text = """
üèîÔ∏è **–í—Ä–µ–º—è –≤—ã–∂–∏–≤–∞–Ω–∏—è –≤ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö**

**–ü—Ä–∞–≤–∏–ª–æ "3-—Ö":**
‚Ä¢ **3 –º–∏–Ω—É—Ç—ã** –±–µ–∑ –≤–æ–∑–¥—É—Ö–∞ (—É—Ç–æ–ø–ª–µ–Ω–∏–µ, –∑–∞–≤–∞–ª)
‚Ä¢ **3 —á–∞—Å–∞** –±–µ–∑ —Ç–µ–ø–ª–∞ (–≥–∏–ø–æ—Ç–µ—Ä–º–∏—è)  
‚Ä¢ **3 –¥–Ω—è** –±–µ–∑ –≤–æ–¥—ã
‚Ä¢ **3 –Ω–µ–¥–µ–ª–∏** –±–µ–∑ –µ–¥—ã

**–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è:**

**–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–µ:**
‚Ä¢ **-40¬∞C** - 30 –º–∏–Ω—É—Ç –±–µ–∑ –∑–∞—â–∏—Ç—ã
‚Ä¢ **-20¬∞C** - 1-2 —á–∞—Å–∞
‚Ä¢ **0¬∞C –∏ –≤–µ—Ç–µ—Ä** - 3-6 —á–∞—Å–æ–≤  
‚Ä¢ **+50¬∞C –±–µ–∑ –≤–æ–¥—ã** - 6-12 —á–∞—Å–æ–≤

**–í –≤–æ–¥–µ:**
‚Ä¢ **0¬∞C** - 15-30 –º–∏–Ω—É—Ç
‚Ä¢ **10¬∞C** - 1-3 —á–∞—Å–∞
‚Ä¢ **20¬∞C** - 12-20 —á–∞—Å–æ–≤

**–ë–µ–∑ –≤–æ–¥—ã:**
‚Ä¢ **–ñ–∞—Ä–∞ +40¬∞C** - 24-48 —á–∞—Å–æ–≤
‚Ä¢ **–£–º–µ—Ä–µ–Ω–Ω—ã–π –∫–ª–∏–º–∞—Ç** - 3-5 –¥–Ω–µ–π
‚Ä¢ **–•–æ–ª–æ–¥** - 7-10 –¥–Ω–µ–π

**‚ö†Ô∏è –§–∞–∫—Ç–æ—Ä—ã, —Å–æ–∫—Ä–∞—â–∞—é—â–∏–µ –≤—Ä–µ–º—è:**
‚Ä¢ –ü–∞–Ω–∏–∫–∞, —Å—Ç—Ä–µ—Å—Å
‚Ä¢ –†–∞–Ω–µ–Ω–∏—è, –±–æ–ª–µ–∑–Ω–∏
‚Ä¢ –§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
‚Ä¢ –ê–ª–∫–æ–≥–æ–ª—å, –Ω–∞—Ä–∫–æ—Ç–∏–∫–∏
        """
        await callback.message.edit_text(
            survival_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö —Å–ø–∞—Å–∞—Ç–µ–ª—è–º", callback_data="rescue")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "rescue_weather":
        weather_text = """
üå¶Ô∏è **–í–ª–∏—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏**

**–î–æ–∂–¥—å/—Å–Ω–µ–≥:**
‚Ä¢ –£—Ö—É–¥—à–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ (–¥–æ 10-50 –º)
‚Ä¢ –†–∞–∑–º—ã—Ç–∏–µ —Å–ª–µ–¥–æ–≤
‚Ä¢ –†–∏—Å–∫ –ø–µ—Ä–µ–æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–¥–∏–æ—Å–≤—è–∑—å—é

**–í–µ—Ç–µ—Ä:**
‚Ä¢ **–î–æ 10 –º/—Å** - –¥–æ–ø—É—Å—Ç–∏–º–æ
‚Ä¢ **10-15 –º/—Å** - –æ—Å–ª–æ–∂–Ω–µ–Ω–∏—è —Å –∞–≤–∏–∞—Ü–∏–µ–π
‚Ä¢ **–°–≤—ã—à–µ 15 –º/—Å** - –∑–∞–ø—Ä–µ—Ç –ø–æ–ª–µ—Ç–æ–≤
‚Ä¢ –°–Ω–æ—Å –∑–≤—É–∫–∞, –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞

**–¢—É–º–∞–Ω:**
‚Ä¢ –í–∏–¥–∏–º–æ—Å—Ç—å –º–µ–Ω–µ–µ 50 –º
‚Ä¢ –î–µ–∑–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è —Å–ø–∞—Å–∞—Ç–µ–ª–µ–π
‚Ä¢ –ó–∞–ø—Ä–µ—Ç –∞–≤–∏–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ GPS –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ

**–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:**
‚Ä¢ **–ù–∏–∂–µ -20¬∞C** - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã
‚Ä¢ **–í—ã—à–µ +35¬∞C** - —Ä–∏—Å–∫ —Ç–µ–ø–ª–æ–≤–æ–≥–æ —É–¥–∞—Ä–∞
‚Ä¢ –ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Å–º–µ–Ω—ã –∫–æ–º–∞–Ω–¥ –∫–∞–∂–¥—ã–µ 2-4 —á–∞—Å–∞

**‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è (–ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞):**
‚Ä¢ –ì—Ä–æ–∑–∞ —Å –º–æ–ª–Ω–∏—è–º–∏
‚Ä¢ –ú–µ—Ç–µ–ª—å —Å –≤–∏–¥–∏–º–æ—Å—Ç—å—é <10 –º
‚Ä¢ –õ–∞–≤–∏–Ω–Ω–∞—è –æ–ø–∞—Å–Ω–æ—Å—Ç—å 4-5 –±–∞–ª–ª–æ–≤
‚Ä¢ –°–µ–ª–∏, –Ω–∞–≤–æ–¥–Ω–µ–Ω–∏—è
        """
        await callback.message.edit_text(
            weather_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö —Å–ø–∞—Å–∞—Ç–µ–ª—è–º", callback_data="rescue")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "rescue_comms":
        comms_text = """
üì° **–°–≤—è–∑—å –≤ —Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö**

**–ß–∞—Å—Ç–æ—Ç—ã —Å–≤—è–∑–∏:**
‚Ä¢ **–ú–ß–° –†–æ—Å—Å–∏–∏**: 149.200 - 149.800 –ú–ì—Ü
‚Ä¢ **–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è**: 121.5 –ú–ì—Ü (–∞–≤–∞—Ä–∏–π–Ω–∞—è)
‚Ä¢ **–ú–æ—Ä—Å–∫–∞—è**: 156.800 –ú–ì—Ü (16 –∫–∞–Ω–∞–ª)
‚Ä¢ **–õ—é–±–∏—Ç–µ–ª—å—Å–∫–∞—è**: 145.500 –ú–ì—Ü (R5)

**–ü—Ä–æ—Ç–æ–∫–æ–ª —Ä–∞–¥–∏–æ—Å–≤—è–∑–∏:**
1. **"[–ü–æ–∑—ã–≤–Ω–æ–π] - [–ü–æ–∑—ã–≤–Ω–æ–π], –ø—Ä–∏–µ–º!"**
2. –ñ–¥–∞—Ç—å –æ—Ç–≤–µ—Ç–∞ 3-5 —Å–µ–∫—É–Ω–¥
3. –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 3 —Ä–∞–∑–∞, –∑–∞—Ç–µ–º –ø–∞—É–∑–∞
4. –ì–æ–≤–æ—Ä–∏—Ç—å —á–µ—Ç–∫–æ, –º–µ–¥–ª–µ–Ω–Ω–æ
5. –ó–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å: **"–ö–æ–Ω–µ—Ü —Å–≤—è–∑–∏"**

**–°–∏–≥–Ω–∞–ª—ã –±–µ–¥—Å—Ç–≤–∏—è:**
‚Ä¢ **SOS** - ... --- ... (3 –∫–æ—Ä–æ—Ç–∫–∏—Ö, 3 –¥–ª–∏–Ω–Ω—ã—Ö, 3 –∫–æ—Ä–æ—Ç–∫–∏—Ö)
‚Ä¢ **MAYDAY** - –≥–æ–ª–æ—Å–æ–º –ø–æ —Ä–∞–¥–∏–æ (3 —Ä–∞–∑–∞)
‚Ä¢ **PAN-PAN** - —Å—Ä–æ—á–Ω–æ—Å—Ç—å (–Ω–µ —Å–º–µ—Ä—Ç–µ–ª—å–Ω–∞—è –æ–ø–∞—Å–Ω–æ—Å—Ç—å)

**–ú–æ–±–∏–ª—å–Ω–∞—è —Å–≤—è–∑—å:**
‚Ä¢ **112** - —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ SIM-–∫–∞—Ä—Ç—ã
‚Ä¢ SMS –ø—Ä–∏ —Å–ª–∞–±–æ–º —Å–∏–≥–Ω–∞–ª–µ
‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—è –±–∞—Ç–∞—Ä–µ–∏ (—Ä–µ–∂–∏–º –ø–æ–ª–µ—Ç–∞ —Å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–º –≤–∫–ª—é—á–µ–Ω–∏–µ–º)
‚Ä¢ –ó–∞–ø–∞—Å–Ω—ã–µ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä—ã, power bank

**‚ö†Ô∏è –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–≤—è–∑–∏:**
‚Ä¢ –ü–æ–¥—ä–µ–º –Ω–∞ –≤–æ–∑–≤—ã—à–µ–Ω–Ω–æ—Å—Ç—å
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ—Ç—Ä–∞–∂–∞—Ç–µ–ª–µ–π, –∑–µ—Ä–∫–∞–ª
‚Ä¢ –î—ã–º–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã (3 —Å—Ç–æ–ª–±–∞ –¥—ã–º–∞)
‚Ä¢ –°–∏–≥–Ω–∞–ª—å–Ω—ã–µ —Ä–∞–∫–µ—Ç—ã
        """
        await callback.message.edit_text(
            comms_text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ö —Å–ø–∞—Å–∞—Ç–µ–ª—è–º", callback_data="rescue")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ]),
            parse_mode="Markdown"
        )
    
    elif callback.data == "admin_panel":
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if not is_admin(callback.from_user.id):
            await callback.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏", show_alert=True)
            return
        
        try:
            stats = await User.get_user_stats()
            storage_type = stats.get('storage_type', 'unknown')
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            if storage_type == 'mongodb':
                storage_info = "üíæ **MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞**"
                additional_info = "‚öôÔ∏è **–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ**"
            elif storage_type == 'json_backup':
                storage_info = "üìÇ **JSON —Ä–µ–∑–µ—Ä–≤ (MongoDB –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)**"
                additional_info = "üí° **–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB**"
            elif storage_type == 'text_file':
                storage_info = "üìÑ **–¢–µ–∫—Å—Ç–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (users.txt)**"
                additional_info = """üí° **–î–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ MongoDB:**
‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: `USE_MONGODB=true` –≤ .env
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ: `MONGODB_URL=mongodb://localhost:27017`"""
            else:
                storage_info = "‚ùå **–û—à–∏–±–∫–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞**"
                additional_info = "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
            
            if stats.get('error'):
                admin_text = f"""
üîß **–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å 112help**

‚ùå **–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏**

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
                """
            else:
                admin_text = f"""
üîß **–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å 112help**

{storage_info}

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:**
‚Ä¢ **–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:** {stats['total']}
‚Ä¢ **–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è:** {stats['active_today']}
‚Ä¢ **–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é:** {stats['active_week']}
‚Ä¢ **–ù–æ–≤—ã—Ö —Å–µ–≥–æ–¥–Ω—è:** {stats['new_today']}
‚Ä¢ **–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö:** {stats['blocked']}

üìà **–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:**
‚Ä¢ **–°–µ–≥–æ–¥–Ω—è:** {stats['active_today']} –∏–∑ {stats['total']} ({(stats['active_today']/stats['total']*100) if stats['total'] > 0 else 0:.1f}%)
‚Ä¢ **–ó–∞ –Ω–µ–¥–µ–ª—é:** {stats['active_week']} –∏–∑ {stats['total']} ({(stats['active_week']/stats['total']*100) if stats['total'] > 0 else 0:.1f}%)

{additional_info}
                """
            
            admin_keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="admin_panel")],
                [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
            ])
            
            await callback.message.edit_text(
                admin_text,
                reply_markup=admin_keyboard,
                parse_mode="Markdown"
            )
            
        except Exception as e:
            await callback.message.edit_text(
                "‚ùå **–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏**\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back")]
                ]),
                parse_mode="Markdown"
            )
    
    elif callback.data == "back":
        welcome_text = """
üö® **112help - –ü–æ–º–æ—â–Ω–∏–∫ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É–∂–±** üö®

–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É–∂–± –†–§.
–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö.

üìñ **–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –º–∏—Å—Å–∏–∏:** [–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å](https://telegra.ph/Cifrovoj-pomoshchnik-ehkstrennyh-sluzhb-06-12)

üöë **–ú–µ–¥–∏—Ü–∏–Ω–∞**: —Ä–∞—Å—á–µ—Ç –¥–æ–∑–∏—Ä–æ–≤–æ–∫ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤, –ø—Ä–æ—Ç–∏–≤–æ—è–¥–∏—è –ø—Ä–∏ –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏—è—Ö, –∞–ª–≥–æ—Ä–∏—Ç–º—ã —Ä–µ–∞–Ω–∏–º–∞—Ü–∏–∏
üöí **–ü–æ–∂–∞—Ä–Ω—ã–µ**: –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–∂–∞—Ä–æ–≤, –≤—ã–±–æ—Ä –æ–≥–Ω–µ—Ç—É—à–∞—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤, –æ–ø–∞—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã  
üëÆ **–ü–æ–ª–∏—Ü–∏—è**: —Å—Ç–∞—Ç—å–∏ –£–ö –†–§ –∏ –ö–æ–ê–ü, –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –∑–∞–¥–µ—Ä–∂–∞–Ω–∏—è, –ø—Ä–∞–≤–∞ –≥—Ä–∞–∂–¥–∞–Ω
üÜò **–°–ø–∞—Å–∞—Ç–µ–ª–∏**: –º–µ—Ç–æ–¥—ã –ø–æ–∏—Å–∫–∞ –ª—é–¥–µ–π, –≤—Ä–µ–º—è –≤—ã–∂–∏–≤–∞–Ω–∏—è, –≤–ª–∏—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã –Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏

**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
‚îú `/poison [–Ω–∞–∑–≤–∞–Ω–∏–µ]` - –ø—Ä–æ—Ç–∏–≤–æ—è–¥–∏–µ –ø—Ä–∏ –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏–∏
‚îú `/dose [–ª–µ–∫–∞—Ä—Å—Ç–≤–æ] [–≤–µ—Å]` - —Ä–∞—Å—á–µ—Ç –¥–æ–∑–∏—Ä–æ–≤–∫–∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞  
‚îú `/fire [–∫–ª–∞—Å—Å]` - —Å–ø–æ—Å–æ–±—ã —Ç—É—à–µ–Ω–∏—è –ø–æ–∂–∞—Ä–∞
‚îî `/law [—Å—Ç–∞—Ç—å—è]` - —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏ –∑–∞–∫–æ–Ω–∞

üí° **–°–æ–≤–µ—Ç:** –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë

–ü–æ–ª–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –∫–æ–º–∞–Ω–¥
‚îî`/help`

**–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:** @kitay9
**–í–µ—Ä—Å–∏—è:** 2.0 | **–°—Ç–∞—Ç—É—Å:** –ê–∫—Ç–∏–≤–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
        """
        
        await callback.message.edit_text(
            welcome_text,
            reply_markup=get_main_menu(callback.from_user.id),
            parse_mode="Markdown"
        )
    
    await callback.answer()

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
async def set_bot_commands():
    commands = [
        BotCommand(command="start", description="üö® –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"),
        BotCommand(command="help", description="üìö –ü–æ–º–æ—â—å –∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"),
        BotCommand(command="dose", description="üíä –†–∞—Å—á–µ—Ç –¥–æ–∑–∏—Ä–æ–≤–∫–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤"),
        BotCommand(command="poison", description="‚ò†Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —è–¥–∞—Ö"),
        BotCommand(command="fire", description="üî• –ö–ª–∞—Å—Å—ã –ø–æ–∂–∞—Ä–æ–≤"),
        BotCommand(command="law", description="‚öñÔ∏è –°—Ç–∞—Ç—å–∏ –£–ö –†–§"),

        BotCommand(command="ai_symptoms", description="ü§ñ –ò–ò –∞–Ω–∞–ª–∏–∑ —Å–∏–º–ø—Ç–æ–º–æ–≤"),
        BotCommand(command="ai_protocol", description="üìù –ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞"),
        BotCommand(command="ai_legal", description="‚öñÔ∏è –ò–ò –ø—Ä–∞–≤–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"),
        BotCommand(command="ai_checklist", description="–ò–ò —á–µ–∫-–ª–∏—Å—Ç –ß–°"),
        BotCommand(command="admin", description="–°—Ç–∞—Ç—å–∏ –ö–æ–ê–ü –†–§"),
    ]
    
    await bot.set_my_commands(commands)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    logger.info("–ó–∞–ø—É—Å–∫ 112help...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await Database.connect()
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥
    await set_bot_commands()
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main()) 